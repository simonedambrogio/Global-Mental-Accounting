data_short_MA %>%
rename_with(-gsub('.', '', .x))
data_short_MA %>%
rename_with(-gsub('.', '', .x, fixed = TRUE))
data_short_MA %>%
rename_with(~gsub('.', '', .x, fixed = TRUE))
data_short_MA %>%
rename_with(~gsub('.', '', .x))
data_short_MA %>%
rename_with(gsub('.', '', fixed = TRUE))
nm <- names(data_short_MA)
gsub('.', '', nm )
nm
gsub('.', '', nm,fixed = T )
data_short_MA %>%
rename_with(~gsub('.', '', .x, fixed = TRUE), toupper)
data_short_MA %>%
rename_with(toupper)
data_short_MA %>%
rename_with(~gsub('.', '', .x, fixed = TRUE)) %>%
rename_with(toupper)
data_short_MA %>%
rename_with(~gsub('.', '', .x, fixed = TRUE)) %>%
rename_with(toupper, .cols = contains(sbject))
data_short_MA %>%
rename_with(~gsub('.', '', .x, fixed = TRUE)) %>%
rename_with(toupper, .cols = contains(subject))
data_short_MA %>%
rename_with(~gsub('.', '', .x, fixed = TRUE)) %>%
rename_with(toupper, .cols = contains('subject'))
data_short_MA %>%
rename_with(~gsub('.', '', .x, fixed = TRUE)) %>%
rename_with(toupper, .cols = contains(-'subject'))
data_short_MA %>%
rename_with(~gsub('.', '', .x, fixed = TRUE)) %>%
rename_with(toupper, .cols = -contains('subject'))
data_short_MA <- data_short_MA %>%
rename_with(~gsub('.', '', .x, fixed = TRUE)) %>%
rename_with(toupper, .cols = -contains('subject'))
# Create dataframe scenario 2
data_short_MA %>%
select(contains('B'))
# Create dataframe scenario 2
data_short_MA %>%
select(contains('B', T))
# Create dataframe scenario 2
data_short_MA %>%
select(contains('B', F))
# Create dataframe scenario 2
df <- data_short_MA %>%
select(contains('B', ignore.case =  F))
seq(1,ncol(df),2)
col_names <- names(df)
col_names
i=1
col_names <- names(df)
col_names
df[,col_names[i]]
rep(c(0, 5, 10), 2)
rep(c(0, 5, 10), each=2)
market_value <- rep(c(5, 10), 3)
market_value
seq(1,ncol(df),2)
seq_len(col_idx)
col_idx <- seq(1,ncol(df),2)
seq_len(col_idx)
seq_along(col_idx)
map_df(seq_along(col_idx), function(i){
data.frame( response = c(df[,col_names[col_idx[i]]], df[,col_names[col_idx[i]+1]]),
cost = cost[i],
market_value = market_value[i],
buyer = c(rep('Friend', n_sbj), rep('Stranger', n_sbj)) )
})
col_names <- names(df)
cost <- rep(c(0, 5, 10), each=2)
market_value <- rep(c(5, 10), 3)
col_idx <- seq(1,ncol(df),2)
map_df(seq_along(col_idx), function(i){
data.frame( response = c(df[,col_names[col_idx[i]]], df[,col_names[col_idx[i]+1]]),
cost = cost[i],
market_value = market_value[i],
buyer = c(rep('Friend', n_sbj), rep('Stranger', n_sbj)) )
})
n_sbj <- nrow( data_short_MA )
map_df(seq_along(col_idx), function(i){
data.frame( response = c(df[,col_names[col_idx[i]]], df[,col_names[col_idx[i]+1]]),
cost = cost[i],
market_value = market_value[i],
buyer = c(rep('Friend', n_sbj), rep('Stranger', n_sbj)) )
})
data_s2 <- map_df(seq_along(col_idx), function(i){
data.frame( response = c(df[,col_names[col_idx[i]]], df[,col_names[col_idx[i]+1]]),
cost = cost[i],
market_value = market_value[i],
buyer = c(rep('Friend', n_sbj), rep('Stranger', n_sbj)) )
})
data_s2
data_s2
data_s2%>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
mytheme() + theme(legend.position = 'none') +
scale_fill_jcolors(palette = 'pal6') +
scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
mytheme() + theme(legend.position = 'none') +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'))
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other')) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
mytheme() + theme(legend.position = 'none') +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other')) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = rev(unique(.$response)))) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = rev(unique(response)))) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
# mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
#        response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
filter(response%in%unique(cost)) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
# mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
#        response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
mutate(response=as.numeric(response)) %>%
filter(response%in%unique(cost)) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
# mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
#        response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
mutate(response=as.numeric(response)) %>%
filter(response%in%unique(cost)) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..)),
position=position_dodge()) +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..)),
position=position_dodge()) +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..)),
position=position_dodge(), color="black",) +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..)),
position=position_dodge(), color="black") +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset") +
# scale_x_continuous(guide = "prism_offset") +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')))
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response))
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..)),
position=position_dodge(), color="black") +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset", breaks = ) +
# scale_x_discrete(guide = "prism_offset", breaks) +
# scale_x_continuous()
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(aes(y = (..count..)/sum(..count..)),
position=position_dodge(), color="black") +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset", breaks = ) +
# scale_x_discrete(guide = "prism_offset", breaks) +
scale_x_continuous(breaks = 1:4) +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(position=position_dodge(), color="black") +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset", breaks = ) +
# scale_x_discrete(guide = "prism_offset", breaks) +
scale_x_continuous(breaks = 1:4) +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
ggplot(aes(response, fill=buyer)) +
geom_bar(stat="identity", position=position_dodge(), color="black") +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset", breaks = ) +
# scale_x_discrete(guide = "prism_offset", breaks) +
scale_x_continuous(breaks = 1:4) +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response))
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
group_by(cost, market_value, buyer) %>%
summarise(y = length(response))
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
group_by(cost, market_value, buyer) %>%
summarise(y = n())
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
group_by(cost, market_value, buyer, response) %>%
summarise(y = n())
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
group_by(cost, market_value, buyer, response) %>%
count(response, name = "no_rows", .drop = F)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
# group_by(cost, market_value, buyer, response) %>%
count(response, name = "no_rows", .drop = F)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
group_by(cost, market_value, buyer) %>%
count(response, name = "no_rows", .drop = F)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other')),
response = as.numeric(response)) %>%
group_by(cost, market_value, buyer) %>%
count(response,  .drop = F)
dat <- data.frame(ID = "a")
dat
dat %>%
dplyr::mutate(ID=factor(ID, levels = letters)) %>%
tidyr::complete(ID) %>%
dplyr::group_by(ID) %>%
dplyr::summarise(no_rows = n())
dat %>%
mutate(ID = factor(ID, levels = letters)) %>%
count(ID, name = "no_rows", .drop = F)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
group_by(cost, market_value, buyer) %>%
count(response,  .drop = F)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
group_by(cost, market_value, buyer) %>%
# count(response,  .drop = F)
summarise(y = n(), )
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
group_by(cost, market_value, buyer, response) %>%
# count(response,  .drop = F)
summarise(y = n(), )
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
group_by(cost, market_value, buyer) %>%
count(response, .drop = F)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
group_by(cost, market_value, buyer) %>%
count(response, .drop = F)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
group_by(cost, market_value, buyer) %>%
count(response, .drop = F) %>%
ggplot(aes(response, n, fill=buyer)) +
geom_bar(stat="identity", position=position_dodge(), color="black") +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset", breaks = ) +
# scale_x_discrete(guide = "prism_offset", breaks) +
scale_x_continuous(breaks = 1:4) +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
group_by(cost, market_value, buyer) %>%
count(response, .drop = F) %>%
ggplot(aes(response, n, fill=buyer)) +
geom_bar(stat="identity", position=position_dodge(), color="black") +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
# scale_y_continuous(labels=scales::percent, guide = "prism_offset", breaks = ) +
# scale_x_discrete(guide = "prism_offset", breaks) +
# scale_x_continuous(breaks = 1:4) +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
# Load libraries
library(dplyr); library(purrr); library(stringr)
library(ggplot2); library(ggpubr); library(jcolors)
library(cowplot); library(ggprism)
library(reshape2)
# Functions
words_replace <- function(variable, words_to_replace, replace_with = "") {
library(dplyr)
if (!require(dplyr)) {
install.packages("dplyr")
library(dplyr)
}
# variable <- enquo(variable) var <- select(data, !!variable) %>% .[,]
if (!is.character(variable))
variable <- as.character(variable)
for (word_i in 1:length(words_to_replace)) {
word_to_rm_index <- which(str_detect(variable, fixed(words_to_replace[word_i])))
if (any(word_to_rm_index)) {
words_to_replace_i <- words_to_replace[word_i]
new_words <- sapply(seq_along(word_to_rm_index), function(i) {
variable[word_to_rm_index][i] <- gsub(words_to_replace_i, replace_with,
variable[word_to_rm_index][i], fixed = TRUE)
})
variable[word_to_rm_index] <- new_words
} else {
warning(paste0("Sting '", words_to_replace, "' not found"))
}
}
return(variable)
}
# Load data
data_short <- readRDS('../Data/data_short.rds')$data %>%
mutate(subject=1:n()) %>%
rename(age=`Age.`, A3=`A3.`)
questions  <- readRDS('../Data/data_short.rds')$question
# ----- Mental Accounting ----- #
# Remove final questionnaires
data_short_MA <- data_short[, -(48:75)]
# Remove response time
idx_time      <- str_detect( names(data_short_MA),  'time_')
data_short_MA <- data_short_MA[, !idx_time]
data_short_MA <- data_short_MA %>%
rename_with(~gsub('.', '', .x, fixed = TRUE)) %>%
rename_with(toupper, .cols = -contains('subject'))
n_sbj <- nrow( data_short_MA )
# --------- Coding legend: --------- #
# -- Dependent Variable -- #
# response: 0
#           5
#           10
#           Other
# -- Explanatory Variables -- #
# cost: 0, 5, 10 (defined as p in Thaler 1985)
#      [cost influence the "fair price" (p_star), which is operationalized
#       with the price asked to a friend]
# market_value : 5, 10
# buyer: friend (proxy for a fair price), stranger
# Create dataframe scenario 2
df <- data_short_MA %>%
select(contains('B', ignore.case =  F))
col_names <- names(df)
cost <- rep(c(0, 5, 10), each=2)
market_value <- rep(c(5, 10), 3)
col_idx <- seq(1,ncol(df),2)
data_s2 <- map_df(seq_along(col_idx), function(i){
data.frame( response = c(df[,col_names[col_idx[i]]], df[,col_names[col_idx[i]+1]]),
cost = cost[i],
market_value = market_value[i],
buyer = c(rep('Friend', n_sbj), rep('Stranger', n_sbj)) )
})
data_s2%>%
mutate(response=ifelse(response%in%unique(cost), response, 'Other'),
response = factor(response, levels = c('0', '5', '10', 'Other'))) %>%
group_by(cost, market_value, buyer) %>%
count(response, .drop = F) %>%
ggplot(aes(response, n, fill=buyer)) +
geom_bar(stat="identity", position=position_dodge(), color="black") +
mytheme() +
scale_fill_jcolors(palette = 'pal6') +
labs(y=NULL, x=NULL) +
facet_grid(cost~market_value)
get_stancode
?get_stancode
library(rstan)
library(tidybayes)
options(mc.cores = 4)
rstan_options(auto_write = TRUE)
# Fit the model
fitMAS <- rstan::sampling(mental_accounting_stan,
iter = 2000,
cores = 4,
data = stan_data,
save_warmup = FALSE)
mental_accounting_stan <- rstan::stan_model(file = 'mental_accounting.stan')
