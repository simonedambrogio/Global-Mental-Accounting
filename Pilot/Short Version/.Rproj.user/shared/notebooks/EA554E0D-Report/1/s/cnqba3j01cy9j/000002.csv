"0","mytheme <- function (palette = ""black_and_white"", base_size = 14, base_family = ""sans"", "
"0","                     base_fontface = ""plain"", base_line_size = base_size/20, base_rect_size = base_size/14, "
"0","                     axis_text_angle = 0, border = FALSE) {"
"0","  "
"0","  is_bool <- function(x) {"
"0","    is_logical(x, n = 1) && !is.na(x)"
"0","  } "
"0","  angle <- axis_text_angle[1]"
"0","   if (!angle %in% c(0, 45, 90, 270)) "
"0","     stop(sprintf(""'axis_text_angle' must be one of [%s]"", "
"0","                  paste(c(0, 45, 90, 270), collapse = "", "")), "".\nFor other angles, use the guide_axis() function in ggplot2 instead"", "
"0","          call. = FALSE)"
"0","   if (!palette %in% names(ggprism::ggprism_data$themes)) {"
"0","     stop(""The palette "", paste(palette), "" does not exist.\n         See names(ggprism_data$themes) for valid palette names"")"
"0","   }"
"0","   colours <- tibble::deframe(ggprism::ggprism_data$themes[[palette]])"
"0","   if (!is_bool(border)) {"
"0","     stop(""border must be either: TRUE or FALSE"")"
"0","   }"
"0","   else {"
"0","     if (border) {"
"0","       panel.border <- element_rect(fill = NA)"
"0","       axis.line <- element_blank()"
"0","     }"
"0","     else if (!border) {"
"0","       panel.border <- element_blank()"
"0","       axis.line <- element_line()"
"0","     }"
"0","   }"
"0","   t <- theme(line = element_line(colour = colours[""axisColor""], "
"0","                                  size = base_line_size, linetype = 1, lineend = ""square""), "
"0","              rect = element_rect(fill = ""white"", colour = colours[""axisColor""], "
"0","                                  size = base_rect_size, linetype = 1), text = element_text(family = base_family, "
"0","                                                                                            face = base_fontface, colour = colours[""graphTitleColor""], "
"0","                                                                                            size = base_size, lineheight = 0.9, hjust = 0.5, "
"0","                                                                                            vjust = 0.5, angle = 0, margin = margin(), debug = FALSE), "
"0","              prism.ticks.length = unit(base_size/50, ""pt""), axis.line = axis.line, "
"0","              axis.line.x = NULL, axis.line.y = NULL, axis.text = element_text(size = rel(0.95), "
"0","                                                                               colour = colours[""axisLabelColor""]), axis.text.x = element_text(margin = margin(t = 0.8 * "
"0","                                                                                                                                                                 base_size/4), angle = axis_text_angle, hjust = ifelse(axis_text_angle %in% "
"0","                                                                                                                                                                                                                         c(45, 90, 270), 1, 0.5), vjust = ifelse(axis_text_angle %in% "
"0","                                                                                                                                                                                                                                                                   c(0, 90, 270), 0.5, 1)), axis.text.x.top = element_text(margin = margin(b = 0.8 * "
"0","                                                                                                                                                                                                                                                                                                                                             base_size/4), vjust = 0), axis.text.y = element_text(margin = margin(r = 0.5 * "
"0","                                                                                                                                                                                                                                                                                                                                                                                                                    base_size/4), hjust = 1), axis.text.y.right = element_text(margin = margin(l = 0.5 * "
"0","                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 base_size/4), hjust = 0), axis.ticks = element_line(), "
"0","              axis.ticks.length = unit(3, ""points""), axis.ticks.length.x = NULL, "
"0","              axis.ticks.length.x.top = NULL, axis.ticks.length.x.bottom = NULL, "
"0","              axis.ticks.length.y = NULL, axis.ticks.length.y.left = NULL, "
"0","              axis.ticks.length.y.right = NULL, axis.title = element_text(colour = colours[""axisTitleColor""]), "
"0","              axis.title.x = element_text(margin = margin(t = base_size * "
"0","                                                            0.6), vjust = 1), axis.title.x.top = element_text(margin = margin(b = base_size * "
"0","                                                                                                                                0.6), vjust = 0), axis.title.y = element_text(angle = 90, "
"0","                                                                                                                                                                              margin = margin(r = base_size * 0.6), vjust = 1), "
"0","              axis.title.y.right = element_text(angle = -90, margin = margin(l = base_size * "
"0","                                                                               0.6), vjust = 0), legend.background = element_blank(), "
"0","              legend.spacing = unit(base_size, ""pt""), legend.spacing.x = NULL, "
"0","              legend.spacing.y = NULL, legend.margin = margin(base_size/2, "
"0","                                                              base_size/2, base_size/2, base_size/2), legend.key = element_blank(), "
"0","              legend.key.size = unit(1.2, ""lines""), legend.key.height = NULL, "
"0","              legend.key.width = unit(base_size * 1.8, ""pt""), legend.text = element_text(size = rel(0.8), "
"0","                                                                                         face = ""plain""), legend.text.align = NULL, legend.title = element_blank(), "
"0","              legend.title.align = NULL, legend.position = ""right"", "
"0","              legend.direction = NULL, legend.justification = ""center"", "
"0","              legend.box = NULL, legend.box.margin = margin(0, 0, 0, "
"0","                                                            0, ""cm""), legend.box.background = element_blank(), "
"0","              legend.box.spacing = unit(base_size, ""pt""), panel.background = element_rect(fill = ifelse(palette == "
"0","                                                                                                          ""office"", colours[""plottingAreaColor""], NA), colour = NA), "
"0","              panel.border = panel.border, panel.grid = element_blank(), "
"0","              panel.grid.minor = element_blank(), panel.spacing = unit(base_size/2, "
"0","                                                                       ""pt""), panel.spacing.x = NULL, panel.spacing.y = NULL, "
"0","              panel.ontop = FALSE, strip.background = element_blank(), "
"0","              strip.text = element_text(colour = colours[""axisTitleColor""], "
"0","                                        size = rel(0.8), margin = margin(base_size/2.5, base_size/2.5, "
"0","                                                                         base_size/2.5, base_size/2.5)), strip.text.x = element_text(margin = margin(b = base_size/3)), "
"0","              strip.text.y = element_text(angle = -90, margin = margin(l = base_size/3)), "
"0","              strip.text.y.left = element_text(angle = 90), strip.placement = ""inside"", "
"0","              strip.placement.x = NULL, strip.placement.y = NULL, strip.switch.pad.grid = unit(base_size/4, "
"0","                                                                                               ""pt""), strip.switch.pad.wrap = unit(base_size/4, "
"0","                                                                                                                                   ""pt""), plot.background = element_rect(fill = colours[""pageBackgroundColor""], "
"0","                                                                                                                                                                         colour = NA), plot.title = element_text(size = rel(1.2), "
"0","                                                                                                                                                                                                                 hjust = 0.5, vjust = 1, margin = margin(b = base_size)), "
"0","              plot.title.position = ""panel"", plot.subtitle = element_text(hjust = 0.5, "
"0","                                                                          vjust = 1, margin = margin(b = base_size/2)), plot.caption = element_text(size = rel(0.8), "
"0","                                                                                                                                                    hjust = 1, vjust = 1, margin = margin(t = base_size/2)), "
"0","              plot.caption.position = ""panel"", plot.tag = element_text(size = rel(1.2), "
"0","                                                                       hjust = 0.5, vjust = 0.5), plot.tag.position = ""topleft"", "
"0","              plot.margin = margin(base_size/2, base_size/2, base_size/2, "
"0","                                   base_size/2), complete = TRUE)"
"0","   ggprism::ggprism_data$themes[[""all_null""]] %+replace% t"
"0"," }"
