---
title: "Multicountry Replication Study"
format: 
  html:
    code-fold: true
    code-block-bg: true
    toc: true
    fig-format: svg
    code-block-border-left: "#31BAE9" # 5A6570
    link-external-newwindow: true
knitr:
  opts_chunk:
    warning: false
    message: false
    fig.align: 'center'

execute:
  cache: true
  warning: false
  message: false
---

```{r}
#| warning: false
#| message: false
#| echo: false
#| output: false

# ----- Update chunks ----- #
# update-pavlovia-0

```

```{r Code-to-load-data-and-libraries}
#| code-fold: true
#| code-summary: "Code to load data and libraries"
#| eval: true
#| warning: false
#| message: false

# Load libraries
library(dplyr); library(purrr); library(stringr)
library(ggplot2); library(ggpubr); library(jcolors)
library(cowplot); library(ggprism); library(tidybayes)
library(reshape2); library(parallel); library(rstan)
library(brms);
library(plotly);

library(knitr);
# library(kableExtra);
library(tidyverse)


color_21countries <- c(
  "#440154FF", "#481467FF", "#482576FF", "#463480FF", 
  "#414487FF", "#3B528BFF", "#35608DFF", "#2F6C8EFF",
  "#2A788EFF", "#25848EFF", "#21908CFF", "#1E9C89FF",
  "#22A884FF", "#2FB47CFF", "#43BF71FF", "#5DC863FF",
  "#7AD151FF", "#9AD93CFF", "#BBDF27FF", "#DEE318FF",
  "#FDE725FF"
)

# Load Preregistered data 
MrAB <- read.csv("../Data/Preregistered/MrAB.csv")
Game <- read.csv("../Data/Preregistered/Game.csv")
Drink <- read.csv("../Data/Preregistered/Drink.csv")
Jacket <- read.csv("../Data/Preregistered/Jacket.csv")
Play <- read.csv("../Data/Preregistered/Play.csv")
Gym <- read.csv("../Data/Preregistered/Gym.csv")
Plane <- read.csv("../Data/Preregistered/Plane.csv")

# Load data
data_MrAB <- read.csv(file = "../Data/data_MrAB.csv")
data_Game <- read.csv(file = "../Data/data_Game.csv")
data_Drink <- read.csv(file = "../Data/data_Drink.csv")
data_Jacket <- read.csv(file = "../Data/data_Jacket.csv")
data_Play <- read.csv(file = "../Data/data_Play.csv")
data_Gym <- read.csv(file = "../Data/data_Gym.csv")
data_Plane <- read.csv(file = "../Data/data_Plane.csv")

original_theta <- readRDS('../Data/original_theta.rds')
data_paper <- map_dfr(1:length(original_theta), function(i) original_theta[[i]])

countries2remove <- data_MrAB %>% 
  filter(attention_check_grater_than_3) %>% 
  group_by(subject) %>% 
  filter(row_number()==1) %>% 
  group_by(Country) %>% 
  summarise(sample_size=n()) %>% 
  filter(sample_size<250) %>% 
  .[,"Country", drop=TRUE]

countries2remove_attention_check_grater_than_2 <- data_MrAB %>% 
  filter(attention_check_grater_than_2) %>% 
  group_by(subject) %>% 
  filter(row_number()==1) %>% 
  group_by(Country) %>% 
  summarise(sample_size=n()) %>% 
  filter(sample_size<250) %>% 
  .[,"Country", drop=TRUE]

```


## Exclusion Criterion

In this report we define five exclusion criterion. First, exclude participants with a completion time lower than a third of the median value of the Length of Interview [$LOI_{subject} < {Mdn(LOI) \over 3}$]. Second, exclude participants whose Country group is different than their Residence OR Native Language [$(Residence | Native~Language) != Country$]. Third, exclude participants who will report a value below 4 (i.e. 1-3) on the “attentional check” question (i.e. “How serious have you been about filling in the survey?”) [$attentional~ check < 4$]. Fourth, exclude participants who will report a value below 3 (i.e. 1-2) on the “attentional check” question [$attentional~ check < 3$]. Fifth, exclude countries with a sample size lower than 250 participants [$Sample < 250$]. 
In this report we will run the entire analysis protocol for five exclusion criterion. 

<br>

|                                           | Full | Exploratory | Preregistered | Partial | None |
|:------------------------------------------|:----:|:-----------:|:-------------:|:-------:|:----:|
|$LOI_{subject} < {Mdn(LOI) \over 3}$       | ✔    |  ✔          |  ✖            |  ✖      |  ✖   |
|$(Residence | Language) != Country$        | ✔    |  ✖          |  ✖            |  ✖      |  ✖   |
|$attentional ~ check < 4$                  | ✔    |  ✔          |  ✔            |  ✖      |  ✖   |
|$attentional ~ check < 3$                  | ✖    |  ✖          |  ✖            |  ✔      |  ✖   |
|$Sample < 250$                             | ✔    |  ✔          |  ✔            |  ✔      |  ✖   |

<br><br>


## Demographics

Demographics of the *Preregistered* sample. 

```{r demographics}
#| code-summary: "Create table"

# Participants from 21 countries
df <- data_Plane %>% 
  filter(coupon=='free') %>% 
  # EXCLUSION: Preregistered
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 )


df_egypt <- df %>% filter(coupon=="free") %>% filter(Country=='Egypt')
convert_farsi_to_arabic <- function(x) {
  if(x=="٠"|x=="۰"){
    return( "0" )
  } else if (x=="۱" | x=="١"){
    return( "1" )
  } else if (x=="۲" | x=="٢"){
    return( "2" )
  } else if (x=="۳"|x=="٣"){
    return( "3" )
  } else if (x=="۴" | x=="٤"){
    return( "4" )
  } else if (x=="۵" | x=="٥"){
    return( "5" )
  } else if (x=="۶"|x=="٦"){
    return( "6" )
  } else if (x=="۷" | x=="٧"){
    return( "7" )
  } else if (x=="۸" | x=="٨"){
    return( "8" )
  } else if (x=="۹" | x=="٩"){
    return( "9" )
  } else if( any(x %in% as.character(0:9) ) ){
    return( x )
  } else {
    warning( paste("Persian number", x, "not found!!!") )
  }
}

convert <- function(x){
  apply(
    str_split(string = x, pattern = "", simplify = T),
    2,
    convert_farsi_to_arabic
  ) %>% paste0(collapse = "")
}

df[df$Country=='Egypt', "Age"] <-  sapply(as.list(df_egypt$Age), convert)


data_table <- rbind(
  df %>% 
    mutate(Age=as.numeric(Age)) %>% 
    filter(Age>0 & Age<99) %>% 
    summarise(
      Country="Pooled",
      Language="",
      n = n(),
      `% female` = round(mean(Gender=='Female')*100,2),
      `Age, median (IQR) (yr)` = str_c(median(Age), " (", quantile(Age,probs = .25), "-", quantile(Age,probs = .75), ")")
    ),
  df %>% 
    group_by(Country) %>% 
    mutate(Age=round(as.numeric(Age)),0) %>% 
    filter(Age>0 & Age<99) %>% 
    summarise(
      Country=names(which.max(table(Country))),
      Language=names(which.max(table(NativeLanguage))),
      n = n(),
      `% female` = round(mean(Gender=='Female')*100,2),
      `Age, median (IQR) (yr)` = str_c(round(median(Age)), " (", round(quantile(Age,probs = .25)), "-", round(quantile(Age,probs = .75)), ")")
    ) 
) %>% 
  mutate(
    Language=ifelse(Country=="Canada", "English, French", Language),
    Language=ifelse(Country=="India", "Hindi, Tamil, English", Language)
    )


# data_table %>%
#   kable(caption="<b>Table 1 | </b> Demographics", align=rep('l', 5),
#         table.attr = "style='width:40%;'", booktabs = T) %>%
#   kable_classic(html_font = "Cambria") %>%
#   # kable_material(c("striped", "hover")) %>%
#   row_spec(0, bold = TRUE) %>% 
#   save_kable("tables/png/Demographics.png", zoom = 3)

# data_table %>%
#   kable(caption="<b>Table 1 | </b> Demographics", align=rep('l', 5),
#         table.attr = "style='width:40%;'", booktabs = T) %>%
#   kable_classic(html_font = "Cambria") %>%
#   # kable_material(c("striped", "hover")) %>%
#   row_spec(0, bold = TRUE) %>% 
#   save_kable("tables/pdf/Demographics.pdf", zoom = 3)

# data_table %>% 
#   kable(caption="<b>Table 1 | </b> Demographics", align=rep('l', 5),
#       table.attr = "style='width:60%;'") %>% 
#   kable_classic(html_font = "Cambria") %>% 
#   kable_material(c("striped", "hover")) %>% 
#   row_spec(0, bold = TRUE)

```

<br><br>

## Effect Size

<br>

In this section we show the effect size of each study for each country. We use log Odd Ratios (OR) to quantify the effect size of binary variables, while we use Standardized Mean Differences (SMD) as a measure of effect size of continuous variables. Each dot correspond to a country. The dots size indicate the inverse of the standard error (e.g. 1/SE). The red horizontal lines indicate the effect size calculated using the results reported in the original papers. For the Drink and Gym study, we could not calculate the effect size of the original papers as information about pooled standard deviation are not reported. To facilitate the interpretation of the results, the variables are coded in such a way that the effect reported in the original papers are positive in all studies.

<br>

::: {.panel-tabset}

### Preregistered

```{r create-preregistered-exclusion }
#| code-summary: "Create preregistered exclusion dataset"

data_MrAB_theta <- data_MrAB %>% filter(response!=2) %>% 
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate mean Finantial Literacy
  group_by(Country) %>% 
  mutate(FinancialLiteracy = mean(FinancialLiteracy)) %>% 
  # Calculate ODD RATIO
  group_by(scenario, scenario_group, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(scenario, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(scenario_group, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(scenario, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(ORgain = Odds[scenario=="gain-gain VS gain"]/Odds[scenario=="gain-loss VS gain"],
         ORloss = Odds[scenario=="loss-loss VS loss"]/Odds[scenario=="loss-gain VS loss"],
         theta = ifelse(scenario_group=="gain", log(ORgain), log(ORloss))) %>% 
  group_by(Country, scenario_group) %>% filter(row_number()==1) %>% 
  select(-c(ORgain, ORloss, Odds, n)) %>% ungroup()

data_Game_theta <- data_Game %>%
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate mean Finantial Literacy
  group_by(Country) %>% 
  mutate(FinancialLiteracy = mean(FinancialLiteracy)) %>% 
  # Calculate ODD RATIO
  group_by(buyer, response, Country) %>%
  mutate(n = n()) %>% filter(row_number()==1) %>%
  group_by(buyer, Country) %>%
  mutate(Odds = n[response==1]/n[response==0]) %>%
  group_by(buyer, Country) %>%
  # filter(Country=="Austria", scenario_group=="gain") %>%
  mutate(se_theta = sqrt(sum(1/n))) %>%
  filter(row_number()==1) %>% select(-response) %>%
  group_by(Country) %>% 
  mutate(OR = Odds[buyer=="Stranger"]/Odds[buyer=="Friend"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup() 

data_Drink_theta <- data_Drink %>% 
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate mean Finantial Literacy
  group_by(Country) %>% 
  mutate(FinancialLiteracy = mean(FinancialLiteracy)) %>% 
  # Remove really really extreme outliers
  filter(response<10000 & response>=0) %>% 
  mutate(response=response+1, logResp=log(response)) %>% 
  # Compute effect size as Standardized Mean Difference
  group_by(Country, store) %>% mutate(n=n()) %>% 
  group_by(Country) %>% 
  # Calculate Mean Difference 
  mutate(md=mean(logResp[store=="Resort Hotel"])-mean(logResp[store=="Grocery Store"])) %>% 
  # Calculate effect size
  mutate(theta=md/sd(logResp)) %>% 
  group_by(Country, store) %>% filter(row_number()==1) %>% 
  group_by(Country) %>% 
  # -- Calculate standard error -- #
  mutate(first = sum(n) / (n[store=="Resort Hotel"]*n[store=="Grocery Store"]),
         second = theta[1]^2/(2*sum(n)),
         se_theta = sqrt(first+second)) %>% 
  select(-c(md, response, first, second, logResp, n)) %>% 
  filter(row_number()==1) %>% ungroup()

data_Jacket_theta <- data_Jacket %>%
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate mean Finantial Literacy
  group_by(Country) %>% 
  mutate(FinancialLiteracy = mean(FinancialLiteracy)) %>% 
  # Calculate ODD RATIO
  group_by(price, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(price, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(price, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(price, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[price=="low"]/Odds[price=="high"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

data_Play_theta <- data_Play %>%
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate mean Finantial Literacy
  group_by(Country) %>% 
  mutate(FinancialLiteracy = mean(FinancialLiteracy)) %>% 
  # Calculate ODD RATIO
  group_by(loss, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(loss, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(loss, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(loss, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[loss=="cash"]/Odds[loss=="ticket"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

data_Gym_theta <- data_Gym %>%
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate mean Finantial Literacy
  group_by(Country) %>% 
  mutate(FinancialLiteracy = mean(FinancialLiteracy)) %>% 
  # Calculate Mean Difference
  group_by(frame, Country) %>% mutate(n = n()) %>%
  group_by(Country) %>% 
  mutate(pooled_sd = sd(response),
         md = mean(response[frame=="Yearly"])-mean(response[frame=="Per-session"]),
         theta = md/pooled_sd) %>% 
  group_by(frame, Country) %>% filter(row_number()==1) %>% 
  group_by(Country) %>%
  # -- Calculate standard error -- #
  mutate(first = sum(n) / (n[frame=="Per-session"]*n[frame=="Yearly"]),
         second = theta[1]^2/(2*sum(n)),
         se_theta = sqrt(first+second)) %>% 
  filter(row_number()==1) %>% ungroup() %>% 
  select(-c(md, first, second, pooled_sd, n, response))

data_Plane_theta <- data_Plane %>%
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate mean Finantial Literacy
  group_by(Country) %>% 
  mutate(FinancialLiteracy = mean(FinancialLiteracy)) %>% 
  # Calculate ODD RATIO
  group_by(coupon, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(coupon, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(coupon, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(coupon, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[coupon=="purchased"]/Odds[coupon=="free"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

theta_preregisteredExclusion <- list(
  MrAB = data_MrAB_theta %>% 
    mutate(study="MrAB", x=ifelse(scenario_group=="gain", 1.2, 1.8),
           family="binomial") %>% 
    select(-c(X, scenario)) %>% rename(condition = scenario_group),
  Game = data_Game_theta %>% mutate(study="Game", x=3, family="binomial") %>% 
    select(-c(X, market_value)) %>% rename(condition = buyer),
  Drink = data_Drink_theta %>% mutate(study="Drink", x=1, family="gaussian") %>% 
    select(-c(X)) %>% rename(condition = store),
  Jacket = data_Jacket_theta %>% mutate(study="Jacket", x=4, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = price),
  Play = data_Play_theta %>% mutate(study="Play", x=5, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = loss),
  Gym = data_Gym_theta %>% mutate(study="Gym", x=2, family="gaussian") %>% 
    select(-c(X)) %>% rename(condition = frame),
  Plane = data_Plane_theta %>% mutate(study="Plane", x=6, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = coupon)
)
```

```{r plot-preregistered-exclusion}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot full exclusion dataset"

data_theta <- map_dfr(1:length(theta_preregisteredExclusion), function(i) theta_preregisteredExclusion[[i]])
nCountries <- length(unique(theta_preregisteredExclusion[[1]]$Country))

plot_OR <- data_theta %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta)) +
  geom_jitter( aes(size=1/se_theta, color=Country), width = 0.1, alpha=0.7) +
  geom_point(data = data_paper, color="firebrick", size=35, shape="-") +
  geom_hline(yintercept = 0, linetype=2) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(log(OR))) +
  scale_color_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_fill_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = unique(data_theta$study[data_theta$family=="binomial"]),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plot_d <- data_theta %>% filter(family=="gaussian") %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  ggplot(aes(x, theta, color=Country)) +
  geom_jitter( aes(size=1/se_theta), width = 0.1, alpha=0.7) +
  geom_hline(yintercept = 0, linetype=2) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(SMD)) +
  scale_color_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_y_continuous(guide = "prism_offset", breaks = -1:1, limits = c(-1, 1.5)) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = unique(data_theta$study[data_theta$family=="gaussian"]),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

cowplot::plot_grid(plot_OR, plot_d, nrow = 1, rel_widths = c(0.7, .3))

```


### Full


```{r create-full }
#| code-summary: "Create full dataset"

data_MrAB_theta <- data_MrAB %>% filter(response!=2) %>% 
  # EXCLUSION: Full Exclusion
  filter(native_language_is_country_language | Country!=Residence) %>% 
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate ODD RATIO
  group_by(scenario, scenario_group, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(scenario, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(scenario_group, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(scenario, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(ORgain = Odds[scenario=="gain-gain VS gain"]/Odds[scenario=="gain-loss VS gain"],
         ORloss = Odds[scenario=="loss-loss VS loss"]/Odds[scenario=="loss-gain VS loss"],
         theta = ifelse(scenario_group=="gain", log(ORgain), log(ORloss))) %>% 
  group_by(Country, scenario_group) %>% filter(row_number()==1) %>% 
  select(-c(ORgain, ORloss, Odds, n)) %>% ungroup()

data_Game_theta <- data_Game %>%
  # EXCLUSION: Full Exclusion
  filter(native_language_is_country_language | Country!=Residence) %>% 
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate ODD RATIO
  group_by(buyer, response, Country) %>%
  mutate(n = n()) %>% filter(row_number()==1) %>%
  group_by(buyer, Country) %>%
  mutate(Odds = n[response==1]/n[response==0]) %>%
  group_by(buyer, Country) %>%
  # filter(Country=="Austria", scenario_group=="gain") %>%
  mutate(se_theta = sqrt(sum(1/n))) %>%
  filter(row_number()==1) %>% select(-response) %>%
  group_by(Country) %>% 
  mutate(OR = Odds[buyer=="Stranger"]/Odds[buyer=="Friend"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup() 

data_Drink_theta <- data_Drink %>% 
  # EXCLUSION: Full Exclusion
  filter(native_language_is_country_language | Country!=Residence) %>% 
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Remove really really extreme outliers
  filter(response<10000 & response>=0) %>% 
  mutate(response=response+1, logResp=log(response)) %>% 
  # Compute effect size as Standardized Mean Difference
  group_by(Country, store) %>% mutate(n=n()) %>% 
  group_by(Country) %>% 
  # Calculate Mean Difference 
  mutate(md=mean(logResp[store=="Resort Hotel"])-mean(logResp[store=="Grocery Store"])) %>% 
  # Calculate effect size
  mutate(theta=md/sd(logResp)) %>% 
  group_by(Country, store) %>% filter(row_number()==1) %>% 
  group_by(Country) %>% 
  # -- Calculate standard error -- #
  mutate(first = sum(n) / (n[store=="Resort Hotel"]*n[store=="Grocery Store"]),
         second = theta[1]^2/(2*sum(n)),
         se_theta = sqrt(first+second)) %>% 
  select(-c(md, response, first, second, logResp, n)) %>% 
  filter(row_number()==1) %>% ungroup()

data_Jacket_theta <- data_Jacket %>%
  # EXCLUSION: Full Exclusion
  filter(native_language_is_country_language | Country!=Residence) %>% 
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate ODD RATIO
  group_by(price, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(price, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(price, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(price, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[price=="low"]/Odds[price=="high"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

data_Play_theta <- data_Play %>%
  # EXCLUSION: Full Exclusion
  filter(native_language_is_country_language | Country!=Residence) %>% 
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate ODD RATIO
  group_by(loss, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(loss, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(loss, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(loss, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[loss=="cash"]/Odds[loss=="ticket"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

data_Gym_theta <- data_Gym %>%
  # EXCLUSION: Full Exclusion
  filter(native_language_is_country_language | Country!=Residence) %>% 
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate Mean Difference
  group_by(frame, Country) %>% mutate(n = n()) %>%
  group_by(Country) %>% 
  mutate(pooled_sd = sd(response),
         md = mean(response[frame=="Yearly"])-mean(response[frame=="Per-session"]),
         theta = md/pooled_sd) %>% 
  group_by(frame, Country) %>% filter(row_number()==1) %>% 
  group_by(Country) %>%
  # -- Calculate standard error -- #
  mutate(first = sum(n) / (n[frame=="Per-session"]*n[frame=="Yearly"]),
         second = theta[1]^2/(2*sum(n)),
         se_theta = sqrt(first+second)) %>% 
  filter(row_number()==1) %>% ungroup() %>% 
  select(-c(md, first, second, pooled_sd, n, response))

data_Plane_theta <- data_Plane %>%
  # EXCLUSION: Full Exclusion
  filter(native_language_is_country_language | Country!=Residence) %>% 
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate ODD RATIO
  group_by(coupon, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(coupon, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(coupon, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(coupon, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[coupon=="purchased"]/Odds[coupon=="free"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

theta_fullExclusion <- list(
  MrAB = data_MrAB_theta %>% 
    mutate(study="MrAB", x=ifelse(scenario_group=="gain", 1.2, 1.8),
           family="binomial") %>% 
    select(-c(X, scenario)) %>% rename(condition = scenario_group),
  Game = data_Game_theta %>% mutate(study="Game", x=3, family="binomial") %>% 
    select(-c(X, market_value)) %>% rename(condition = buyer),
  Drink = data_Drink_theta %>% mutate(study="Drink", x=1, family="gaussian") %>% 
    select(-c(X)) %>% rename(condition = store),
  Jacket = data_Jacket_theta %>% mutate(study="Jacket", x=4, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = price),
  Play = data_Play_theta %>% mutate(study="Play", x=5, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = loss),
  Gym = data_Gym_theta %>% mutate(study="Gym", x=2, family="gaussian") %>% 
    select(-c(X)) %>% rename(condition = frame),
  Plane = data_Plane_theta %>% mutate(study="Plane", x=6, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = coupon)
)
```

```{r plot-full}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot full exclusion dataset"

data_theta <- map_dfr(1:length(theta_fullExclusion), function(i) theta_fullExclusion[[i]])
nCountries <- length(unique(theta_fullExclusion[[1]]$Country))

plot_OR <- data_theta %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta)) +
  geom_jitter( aes(size=1/se_theta, color=Country), width = 0.1, alpha=0.7) +
  geom_point(data = data_paper, color="firebrick", size=35, shape="-") +
  geom_hline(yintercept = 0, linetype=2) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(log(OR))) +
  scale_color_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_fill_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = unique(data_theta$study[data_theta$family=="binomial"]),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plot_d <- data_theta %>% filter(family=="gaussian") %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  ggplot(aes(x, theta, color=Country)) +
  geom_jitter( aes(size=1/se_theta), width = 0.1, alpha=0.7) +
  geom_hline(yintercept = 0, linetype=2) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(SMD)) +
  scale_color_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_y_continuous(guide = "prism_offset", breaks = -1:1, limits = c(-1, 1.5)) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = unique(data_theta$study[data_theta$family=="gaussian"]),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

cowplot::plot_grid(plot_OR, plot_d, nrow = 1, rel_widths = c(0.7, .3))

```

### Exploratory

```{r create-exploratory }
#| code-summary: "Create exploratory dataset"

data_MrAB_theta <- data_MrAB %>% filter(response!=2) %>% 
  # EXCLUSION: Exploratory Exclusion
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate ODD RATIO
  group_by(scenario, scenario_group, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(scenario, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(scenario_group, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(scenario, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(ORgain = Odds[scenario=="gain-gain VS gain"]/Odds[scenario=="gain-loss VS gain"],
         ORloss = Odds[scenario=="loss-loss VS loss"]/Odds[scenario=="loss-gain VS loss"],
         theta = ifelse(scenario_group=="gain", log(ORgain), log(ORloss))) %>% 
  group_by(Country, scenario_group) %>% filter(row_number()==1) %>% 
  select(-c(ORgain, ORloss, Odds, n)) %>% ungroup()

data_Game_theta <- data_Game %>%
  # EXCLUSION: Exploratory Exclusion
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate ODD RATIO
  group_by(buyer, response, Country) %>%
  mutate(n = n()) %>% filter(row_number()==1) %>%
  group_by(buyer, Country) %>%
  mutate(Odds = n[response==1]/n[response==0]) %>%
  group_by(buyer, Country) %>%
  # filter(Country=="Austria", scenario_group=="gain") %>%
  mutate(se_theta = sqrt(sum(1/n))) %>%
  filter(row_number()==1) %>% select(-response) %>%
  group_by(Country) %>% 
  mutate(OR = Odds[buyer=="Stranger"]/Odds[buyer=="Friend"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup() 

data_Drink_theta <- data_Drink %>% 
  # EXCLUSION: Exploratory Exclusion
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Remove really really extreme outliers
  filter(response<10000 & response>=0) %>% 
  mutate(response=response+1, logResp=log(response)) %>% 
  # Compute effect size as Standardized Mean Difference
  group_by(Country, store) %>% mutate(n=n()) %>% 
  group_by(Country) %>% 
  # Calculate Mean Difference 
  mutate(md=mean(logResp[store=="Resort Hotel"])-mean(logResp[store=="Grocery Store"])) %>% 
  # Calculate effect size
  mutate(theta=md/sd(logResp)) %>% 
  group_by(Country, store) %>% filter(row_number()==1) %>% 
  group_by(Country) %>% 
  # -- Calculate standard error -- #
  mutate(first = sum(n) / (n[store=="Resort Hotel"]*n[store=="Grocery Store"]),
         second = theta[1]^2/(2*sum(n)),
         se_theta = sqrt(first+second)) %>% 
  select(-c(md, response, first, second, logResp, n)) %>% 
  filter(row_number()==1) %>% ungroup()

data_Jacket_theta <- data_Jacket %>%
  # EXCLUSION: Exploratory Exclusion
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate ODD RATIO
  group_by(price, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(price, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(price, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(price, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[price=="low"]/Odds[price=="high"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

data_Play_theta <- data_Play %>%
  # EXCLUSION: Exploratory Exclusion
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate ODD RATIO
  group_by(loss, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(loss, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(loss, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(loss, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[loss=="cash"]/Odds[loss=="ticket"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

data_Gym_theta <- data_Gym %>%
  # EXCLUSION: Exploratory Exclusion
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate Mean Difference
  group_by(frame, Country) %>% mutate(n = n()) %>%
  group_by(Country) %>% 
  mutate(pooled_sd = sd(response),
         md = mean(response[frame=="Yearly"])-mean(response[frame=="Per-session"]),
         theta = md/pooled_sd) %>% 
  group_by(frame, Country) %>% filter(row_number()==1) %>% 
  group_by(Country) %>%
  # -- Calculate standard error -- #
  mutate(first = sum(n) / (n[frame=="Per-session"]*n[frame=="Yearly"]),
         second = theta[1]^2/(2*sum(n)),
         se_theta = sqrt(first+second)) %>% 
  filter(row_number()==1) %>% ungroup() %>% 
  select(-c(md, first, second, pooled_sd, n, response))

data_Plane_theta <- data_Plane %>%
  # EXCLUSION: Exploratory Exclusion
  filter( !loi_lower_than_loiX0_33 ) %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  filter( attention_check_grater_than_3 ) %>% 
  # Calculate ODD RATIO
  group_by(coupon, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(coupon, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(coupon, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(coupon, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[coupon=="purchased"]/Odds[coupon=="free"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

theta_exploratoryExclusion <- list(
  MrAB = data_MrAB_theta %>% 
    mutate(study="MrAB", x=ifelse(scenario_group=="gain", 1.2, 1.8),
           family="binomial") %>% 
    select(-c(X, scenario)) %>% rename(condition = scenario_group),
  Game = data_Game_theta %>% mutate(study="Game", x=3, family="binomial") %>% 
    select(-c(X, market_value)) %>% rename(condition = buyer),
  Drink = data_Drink_theta %>% mutate(study="Drink", x=1, family="gaussian") %>% 
    select(-c(X)) %>% rename(condition = store),
  Jacket = data_Jacket_theta %>% mutate(study="Jacket", x=4, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = price),
  Play = data_Play_theta %>% mutate(study="Play", x=5, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = loss),
  Gym = data_Gym_theta %>% mutate(study="Gym", x=2, family="gaussian") %>% 
    select(-c(X)) %>% rename(condition = frame),
  Plane = data_Plane_theta %>% mutate(study="Plane", x=6, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = coupon)
)
```

```{r plot-exploratory}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot exploratory exclusion dataset"

data_theta <- map_dfr(1:length(theta_exploratoryExclusion), function(i) theta_fullExclusion[[i]])
nCountries <- length(unique(theta_exploratoryExclusion[[1]]$Country))

plot_OR <- data_theta %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta)) +
  geom_jitter( aes(size=1/se_theta, color=Country), width = 0.1, alpha=0.7) +
  geom_point(data = data_paper, color="firebrick", size=35, shape="-") +
  geom_hline(yintercept = 0, linetype=2) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(log(OR))) +
  scale_color_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_fill_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = unique(data_theta$study[data_theta$family=="binomial"]),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plot_d <- data_theta %>% filter(family=="gaussian") %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  ggplot(aes(x, theta, color=Country)) +
  geom_jitter( aes(size=1/se_theta), width = 0.1, alpha=0.7) +
  geom_hline(yintercept = 0, linetype=2) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(SMD)) +
  scale_color_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_y_continuous(guide = "prism_offset", breaks = -1:1, limits = c(-1, 1.5)) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = unique(data_theta$study[data_theta$family=="gaussian"]),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

cowplot::plot_grid(plot_OR, plot_d, nrow = 1, rel_widths = c(0.7, .3))

```


### Partial

```{r create-partial-exclusion }
#| code-summary: "Create partial exclusion dataset"

data_MrAB_theta <- data_MrAB %>% filter(response!=2) %>% 
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove_attention_check_grater_than_2) ) %>% 
  filter( attention_check_grater_than_2 ) %>% 
  # Calculate ODD RATIO
  group_by(scenario, scenario_group, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(scenario, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(scenario_group, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(scenario, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(ORgain = Odds[scenario=="gain-gain VS gain"]/Odds[scenario=="gain-loss VS gain"],
         ORloss = Odds[scenario=="loss-loss VS loss"]/Odds[scenario=="loss-gain VS loss"],
         theta = ifelse(scenario_group=="gain", log(ORgain), log(ORloss))) %>% 
  group_by(Country, scenario_group) %>% filter(row_number()==1) %>% 
  select(-c(ORgain, ORloss, Odds, n)) %>% ungroup()

data_Game_theta <- data_Game %>%
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove_attention_check_grater_than_2) ) %>% 
  filter( attention_check_grater_than_2 ) %>% 
  # Calculate ODD RATIO
  group_by(buyer, response, Country) %>%
  mutate(n = n()) %>% filter(row_number()==1) %>%
  group_by(buyer, Country) %>%
  mutate(Odds = n[response==1]/n[response==0]) %>%
  group_by(buyer, Country) %>%
  # filter(Country=="Austria", scenario_group=="gain") %>%
  mutate(se_theta = sqrt(sum(1/n))) %>%
  filter(row_number()==1) %>% select(-response) %>%
  group_by(Country) %>% 
  mutate(OR = Odds[buyer=="Stranger"]/Odds[buyer=="Friend"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup() 

data_Drink_theta <- data_Drink %>% 
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove_attention_check_grater_than_2) ) %>% 
  filter( attention_check_grater_than_2 ) %>% 
  # Remove really really extreme outliers
  filter(response<10000 & response>=0) %>% 
  mutate(response=response+1, logResp=log(response)) %>% 
  # Compute effect size as Standardized Mean Difference
  group_by(Country, store) %>% mutate(n=n()) %>% 
  group_by(Country) %>% 
  # Calculate Mean Difference 
  mutate(md=mean(logResp[store=="Resort Hotel"])-mean(logResp[store=="Grocery Store"])) %>% 
  # Calculate effect size
  mutate(theta=md/sd(logResp)) %>% 
  group_by(Country, store) %>% filter(row_number()==1) %>% 
  group_by(Country) %>% 
  # -- Calculate standard error -- #
  mutate(first = sum(n) / (n[store=="Resort Hotel"]*n[store=="Grocery Store"]),
         second = theta[1]^2/(2*sum(n)),
         se_theta = sqrt(first+second)) %>% 
  select(-c(md, response, first, second, logResp, n)) %>% 
  filter(row_number()==1) %>% ungroup()

data_Jacket_theta <- data_Jacket %>%
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove_attention_check_grater_than_2) ) %>% 
  filter( attention_check_grater_than_2 ) %>% 
  # Calculate ODD RATIO
  group_by(price, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(price, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(price, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(price, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[price=="low"]/Odds[price=="high"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

data_Play_theta <- data_Play %>%
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove_attention_check_grater_than_2) ) %>% 
  filter( attention_check_grater_than_2 ) %>% 
  # Calculate ODD RATIO
  group_by(loss, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(loss, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(loss, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(loss, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[loss=="cash"]/Odds[loss=="ticket"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

data_Gym_theta <- data_Gym %>%
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove_attention_check_grater_than_2) ) %>% 
  filter( attention_check_grater_than_2 ) %>% 
  # Calculate Mean Difference
  group_by(frame, Country) %>% mutate(n = n()) %>%
  group_by(Country) %>% 
  mutate(pooled_sd = sd(response),
         md = mean(response[frame=="Yearly"])-mean(response[frame=="Per-session"]),
         theta = md/pooled_sd) %>% 
  group_by(frame, Country) %>% filter(row_number()==1) %>% 
  group_by(Country) %>%
  # -- Calculate standard error -- #
  mutate(first = sum(n) / (n[frame=="Per-session"]*n[frame=="Yearly"]),
         second = theta[1]^2/(2*sum(n)),
         se_theta = sqrt(first+second)) %>% 
  filter(row_number()==1) %>% ungroup() %>% 
  select(-c(md, first, second, pooled_sd, n, response))

data_Plane_theta <- data_Plane %>%
  # EXCLUSION: Full Exclusion
  filter( !(Country %in% countries2remove_attention_check_grater_than_2) ) %>% 
  filter( attention_check_grater_than_2 ) %>% 
  # Calculate ODD RATIO
  group_by(coupon, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(coupon, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(coupon, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(coupon, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[coupon=="purchased"]/Odds[coupon=="free"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

theta_partialExclusion <- list(
  MrAB = data_MrAB_theta %>% 
    mutate(study="MrAB", x=ifelse(scenario_group=="gain", 1.2, 1.8),
           family="binomial") %>% 
    select(-c(X, scenario)) %>% rename(condition = scenario_group),
  Game = data_Game_theta %>% mutate(study="Game", x=3, family="binomial") %>% 
    select(-c(X, market_value)) %>% rename(condition = buyer),
  Drink = data_Drink_theta %>% mutate(study="Drink", x=1, family="gaussian") %>% 
    select(-c(X)) %>% rename(condition = store),
  Jacket = data_Jacket_theta %>% mutate(study="Jacket", x=4, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = price),
  Play = data_Play_theta %>% mutate(study="Play", x=5, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = loss),
  Gym = data_Gym_theta %>% mutate(study="Gym", x=2, family="gaussian") %>% 
    select(-c(X)) %>% rename(condition = frame),
  Plane = data_Plane_theta %>% mutate(study="Plane", x=6, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = coupon)
)
```

```{r plot-partial-exclusion}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot partial exclusion dataset"

data_theta <- map_dfr(1:length(theta_partialExclusion), function(i) theta_partialExclusion[[i]])
nCountries <- length(unique(theta_partialExclusion[[1]]$Country))

plot_OR <- data_theta %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta, color=Country)) +
  geom_jitter( aes(size=1/se_theta), width = 0.1, alpha=0.7) +
  geom_point(data = data_paper, color="firebrick", size=35, shape="-") +
  geom_hline(yintercept = 0, linetype=2) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(log(OR))) +
  scale_color_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = unique(data_theta$study[data_theta$family=="binomial"]),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plot_d <- data_theta %>% filter(family=="gaussian") %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  ggplot(aes(x, theta, color=Country)) +
  geom_jitter( aes(size=1/se_theta), width = 0.1, alpha=0.7) +
  geom_hline(yintercept = 0, linetype=2) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(SMD)) +
  scale_color_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_y_continuous(guide = "prism_offset", breaks = -1:1, limits = c(-1, 1.5)) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = unique(data_theta$study[data_theta$family=="gaussian"]),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

cowplot::plot_grid(plot_OR, plot_d, nrow = 1, rel_widths = c(0.7, .3))

```

### None

```{r create-no-exclusion }
#| code-summary: "Create no exclusion dataset"

data_MrAB_theta <- data_MrAB %>% filter(response!=2) %>% 
  # EXCLUSION: Full Exclusion
  filter( T ) %>%
  # Calculate ODD RATIO
  group_by(scenario, scenario_group, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(scenario, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(scenario_group, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(scenario, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(ORgain = Odds[scenario=="gain-gain VS gain"]/Odds[scenario=="gain-loss VS gain"],
         ORloss = Odds[scenario=="loss-loss VS loss"]/Odds[scenario=="loss-gain VS loss"],
         theta = ifelse(scenario_group=="gain", log(ORgain), log(ORloss))) %>% 
  group_by(Country, scenario_group) %>% filter(row_number()==1) %>% 
  select(-c(ORgain, ORloss, Odds, n)) %>% ungroup()

data_Game_theta <- data_Game %>%
  # EXCLUSION: Full Exclusion
  filter( T ) %>% 
  # Calculate ODD RATIO
  group_by(buyer, response, Country) %>%
  mutate(n = n()) %>% filter(row_number()==1) %>%
  group_by(buyer, Country) %>%
  mutate(Odds = n[response==1]/n[response==0]) %>%
  group_by(buyer, Country) %>%
  # filter(Country=="Austria", scenario_group=="gain") %>%
  mutate(se_theta = sqrt(sum(1/n))) %>%
  filter(row_number()==1) %>% select(-response) %>%
  group_by(Country) %>% 
  mutate(OR = Odds[buyer=="Stranger"]/Odds[buyer=="Friend"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup() 

data_Drink_theta <- data_Drink %>% 
  # EXCLUSION: Full Exclusion
  filter( T ) %>% 
  # Remove really really extreme outliers
  filter(response<10000 & response>=0) %>% 
  mutate(response=response+1, logResp=log(response)) %>% 
  # Compute effect size as Standardized Mean Difference
  group_by(Country, store) %>% mutate(n=n()) %>% 
  group_by(Country) %>% 
  # Calculate Mean Difference 
  mutate(md=mean(logResp[store=="Resort Hotel"])-mean(logResp[store=="Grocery Store"])) %>% 
  # Calculate effect size
  mutate(theta=md/sd(logResp)) %>% 
  group_by(Country, store) %>% filter(row_number()==1) %>% 
  group_by(Country) %>% 
  # -- Calculate standard error -- #
  mutate(first = sum(n) / (n[store=="Resort Hotel"]*n[store=="Grocery Store"]),
         second = theta[1]^2/(2*sum(n)),
         se_theta = sqrt(first+second)) %>% 
  select(-c(md, response, first, second, logResp, n)) %>% 
  filter(row_number()==1) %>% ungroup()

data_Jacket_theta <- data_Jacket %>%
  # EXCLUSION: No Exclusion
  filter( T ) %>% 
  # Calculate ODD RATIO
  group_by(price, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(price, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(price, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(price, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[price=="low"]/Odds[price=="high"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

data_Play_theta <- data_Play %>%
  # EXCLUSION: No Exclusion
  filter( T ) %>%
  # Calculate ODD RATIO
  group_by(loss, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(loss, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(loss, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(loss, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[loss=="cash"]/Odds[loss=="ticket"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

data_Gym_theta <- data_Gym %>%
  # EXCLUSION: Full Exclusion
  filter( T ) %>% 
  # Calculate Mean Difference
  group_by(frame, Country) %>% mutate(n = n()) %>%
  group_by(Country) %>% 
  mutate(pooled_sd = sd(response),
         md = mean(response[frame=="Yearly"])-mean(response[frame=="Per-session"]),
         theta = md/pooled_sd) %>% 
  group_by(frame, Country) %>% filter(row_number()==1) %>% 
  group_by(Country) %>%
  # -- Calculate standard error -- #
  mutate(first = sum(n) / (n[frame=="Per-session"]*n[frame=="Yearly"]),
         second = theta[1]^2/(2*sum(n)),
         se_theta = sqrt(first+second)) %>% 
  filter(row_number()==1) %>% ungroup() %>% 
  select(-c(md, first, second, pooled_sd, n, response))

data_Plane_theta <- data_Plane %>%
  # EXCLUSION: No Exclusion
  filter( T ) %>% 
  # Calculate ODD RATIO
  group_by(coupon, response, Country) %>% 
  mutate(n = n()) %>% filter(row_number()==1) %>% 
  group_by(coupon, Country) %>% 
  mutate(Odds = n[response==1]/n[response==0]) %>% 
  group_by(coupon, Country) %>% 
  # filter(Country=="Austria", scenario_group=="gain") %>% 
  mutate(se_theta = sqrt(sum(1/n))) %>%
  group_by(coupon, Country) %>% filter(row_number()==1) %>% select(-response) %>% 
  group_by(Country) %>% 
  mutate(OR = Odds[coupon=="purchased"]/Odds[coupon=="free"],
         theta = log(OR)) %>% filter(row_number()==1) %>% 
  select(-c(OR, Odds, n)) %>% ungroup()

theta_noExclusion <- list(
  MrAB = data_MrAB_theta %>% 
    mutate(study="MrAB", x=ifelse(scenario_group=="gain", 1.2, 1.8),
           family="binomial") %>% 
    select(-c(X, scenario)) %>% rename(condition = scenario_group),
  Game = data_Game_theta %>% mutate(study="Game", x=3, family="binomial") %>% 
    select(-c(X, market_value)) %>% rename(condition = buyer),
  Drink = data_Drink_theta %>% mutate(study="Drink", x=1, family="gaussian") %>% 
    select(-c(X)) %>% rename(condition = store),
  Jacket = data_Jacket_theta %>% mutate(study="Jacket", x=4, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = price),
  Play = data_Play_theta %>% mutate(study="Play", x=5, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = loss),
  Gym = data_Gym_theta %>% mutate(study="Gym", x=2, family="gaussian") %>% 
    select(-c(X)) %>% rename(condition = frame),
  Plane = data_Plane_theta %>% mutate(study="Plane", x=6, family="binomial") %>% 
    select(-c(X)) %>% rename(condition = coupon)
)
```

```{r plot-no-exclusion}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot no exclusion dataset"

data_theta <- map_dfr(1:length(theta_noExclusion), function(i) theta_noExclusion[[i]])
nCountries <- length(unique(theta_noExclusion[[1]]$Country))

plot_OR <- data_theta %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta, color=Country)) +
  geom_jitter( aes(size=1/se_theta), width = 0.1, alpha=0.7) +
  geom_point(data = data_paper, color="firebrick", size=35, shape="-") +
  geom_hline(yintercept = 0, linetype=2) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(log(OR))) +
  scale_color_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = unique(data_theta$study[data_theta$family=="binomial"]),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plot_d <- data_theta %>% filter(family=="gaussian") %>% 
  filter( !(Country %in% countries2remove) ) %>% 
  ggplot(aes(x, theta, color=Country)) +
  geom_jitter( aes(size=1/se_theta), width = 0.1, alpha=0.7) +
  geom_hline(yintercept = 0, linetype=2) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(SMD)) +
  scale_color_manual(values = viridis::viridis_pal()(nCountries)) +
  scale_y_continuous(guide = "prism_offset", breaks = -1:1, limits = c(-1, 1.5)) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = unique(data_theta$study[data_theta$family=="gaussian"]),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

cowplot::plot_grid(plot_OR, plot_d, nrow = 1, rel_widths = c(0.7, .3))

```

:::

<br><br>

## Bayesian Meta-Analysis

<br>

In this section we perform a Bayesian meta-analysis. The purple dots indicate the population level estimates, while the gray dots indicate the estimates of each country. Our results show that the population effect replicate the original findings for each study, regardless of the exclusion criterion used.

<br>

::: {.panel-tabset}

### Preregistered

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

#### MrAB

```{r fit-MrAB}
#| code-summary: Show codes
#| output: false

# MrAB
mMrAB1 <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_preregisteredExclusion$MrAB %>% filter(condition=="gain"),
              iter = 10000, refresh = 0)

fe <- fixef(mMrAB1)[,"Estimate"]
re <- ranef(mMrAB1)$Country[,,][,"Estimate"]
postMrAB1 <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="MrAB", x = 1.2)

mMrAB2 <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_preregisteredExclusion$MrAB %>% filter(condition=="loss"),
              iter = 10000, refresh = 0)

fe <- fixef(mMrAB2)[,"Estimate"]
re <- ranef(mMrAB2)$Country[,,][,"Estimate"]
postMrAB2 <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="MrAB", x = 1.8)

```

```{r summary-fit-MrAB1}
#| echo: false

table_bayesian <- fixef(mMrAB1) %>% as.data.frame(row.names = '') %>% 
  mutate(Study="MrAB1", 
         Estimate = round(Estimate, 2),
         `CIs (95%)`=str_c(round(Q2.5,2), round(Q97.5,2), sep = ' - '),
         ) %>% 
  select(-c(Est.Error, Q2.5, Q97.5))


sjPlot::tab_model(mMrAB1)
```

```{r summary-fit-MrAB2}
#| echo: false

table_bayesian <- rbind(
  table_bayesian,
  fixef(mMrAB2) %>% as.data.frame(row.names = '') %>% 
    mutate(Study="MrAB2", 
           Estimate = round(Estimate, 2),
           `CIs (95%)`=str_c(round(Q2.5,2), round(Q97.5,2), sep = ' - '),
           ) %>% 
    select(-c(Est.Error, Q2.5, Q97.5))
)

sjPlot::tab_model(mMrAB2)
```

#### Game
```{r fit-Game}
#| code-summary: Show codes
#| eval: true
#| output: false

# MrAB
mGame <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_preregisteredExclusion$Game,
             iter = 10000)

fe <- fixef(mGame)[,"Estimate"]
re <- ranef(mGame)$Country[,,][,"Estimate"]
postGame <- data.frame(post=c(fe, fe+re), 
                       Country=c("all", names(re)), 
                       study="Game", x = 3)

```

```{r summary-fit-Game}
#| echo: false

table_bayesian <- rbind(
  table_bayesian,
  fixef(mGame) %>% as.data.frame(row.names = '') %>% 
    mutate(Study="Game", 
           Estimate = round(Estimate, 2),
           `CIs (95%)`=str_c(round(Q2.5,2), round(Q97.5,2), sep = ' - '),
           ) %>% 
    select(-c(Est.Error, Q2.5, Q97.5))
)

sjPlot::tab_model(mGame)
```

#### Drink
```{r fit-Drink}
#| code-summary: Show codes
#| eval: true
#| output: false

mDrink <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_preregisteredExclusion$Drink,
             iter = 10000)

fe <- fixef(mDrink)[,"Estimate"]
re <- ranef(mDrink)$Country[,,][,"Estimate"]
postDrink <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="Drink", x = 1)

```

```{r summary-fit-Drink}
#| echo: false

table_bayesian <- rbind(
  table_bayesian,
  fixef(mDrink) %>% as.data.frame(row.names = '') %>% 
    mutate(Study="Drink", 
           Estimate = round(Estimate, 2),
           `CIs (95%)`=str_c(round(Q2.5,2), round(Q97.5,2), sep = ' - '),
           ) %>% 
    select(-c(Est.Error, Q2.5, Q97.5))
)
sjPlot::tab_model(mDrink)
```

#### Jacket
```{r fit-Jacket}
#| code-summary: Show codes
#| eval: true
#| output: false

mJacket <- brm(theta|se(se_theta) ~ 1 + (1|Country),
               data = theta_preregisteredExclusion$Jacket,
               iter = 10000)

fe <- fixef(mJacket)[,"Estimate"]
re <- ranef(mJacket)$Country[,,][,"Estimate"]
postJacket <- data.frame(post=c(fe, fe+re), 
                         Country=c("all", names(re)), 
                         study="Jacket", x = 4)

```

```{r summary-fit-Jacket}
#| echo: false

table_bayesian <- rbind(
  table_bayesian,
  fixef(mJacket) %>% as.data.frame(row.names = '') %>% 
    mutate(Study="Jacket", 
           Estimate = round(Estimate, 2),
           `CIs (95%)`=str_c(round(Q2.5,2), round(Q97.5,2), sep = ' - '),
           ) %>% 
    select(-c(Est.Error, Q2.5, Q97.5))
)

sjPlot::tab_model(mJacket)
```

#### Play
```{r fit-Play}
#| code-summary: Show codes
#| eval: true
#| output: false

mPlay <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_preregisteredExclusion$Play,
             iter = 10000)

fe <- fixef(mPlay)[,"Estimate"]
re <- ranef(mPlay)$Country[,,][,"Estimate"]
postPlay <- data.frame(post=c(fe, fe+re), 
                       Country=c("all", names(re)), 
                       study="Play", x = 5)

```

```{r summary-fit-Play}
#| echo: false

table_bayesian <- rbind(
  table_bayesian,
  fixef(mPlay) %>% as.data.frame(row.names = '') %>% 
    mutate(Study="Play", 
           Estimate = round(Estimate, 2),
           `CIs (95%)`=str_c(round(Q2.5,2), round(Q97.5,2), sep = ' - '),
           ) %>% 
    select(-c(Est.Error, Q2.5, Q97.5))
)

sjPlot::tab_model(mPlay)
```

#### Gym
```{r fit-Gym}
#| code-summary: Show codes
#| eval: true
#| output: false

mGym <- brm(theta|se(se_theta) ~ 1 + (1|Country),
            data = theta_preregisteredExclusion$Gym,
            iter = 10000)

fe <- fixef(mGym)[,"Estimate"]
re <- ranef(mGym)$Country[,,][,"Estimate"]
postGym <- data.frame(post=c(fe, fe+re), 
                      Country=c("all", names(re)), 
                      study="Gym", x = 2)

```

```{r summary-fit-Gym}
#| echo: false

table_bayesian <- rbind(
  table_bayesian,
  fixef(mGym) %>% as.data.frame(row.names = '') %>% 
    mutate(Study="Gym", 
           Estimate = round(Estimate, 2),
           `CIs (95%)`=str_c(round(Q2.5,2), round(Q97.5,2), sep = ' - '),
           ) %>% 
    select(-c(Est.Error, Q2.5, Q97.5))
)

sjPlot::tab_model(mGym)
```

#### Plane
```{r fit-Plane}
#| code-summary: Show codes
#| eval: true
#| output: false

mPlane <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_preregisteredExclusion$Plane,
              iter = 10000)

fe <- fixef(mPlane)[,"Estimate"]
re <- ranef(mPlane)$Country[,,][,"Estimate"]
postPlane <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="Plane", x = 6)

```

```{r summary-fit-Plane}
#| echo: false

table_bayesian <- rbind(
  table_bayesian,
  fixef(mPlane) %>% as.data.frame(row.names = '') %>% 
    mutate(Study="Plane", 
           Estimate = round(Estimate, 2),
           `CIs (95%)`=str_c(round(Q2.5,2), round(Q97.5,2), sep = ' - '),
           ) %>% 
    select(-c(Est.Error, Q2.5, Q97.5))
)
#
sjPlot::tab_model(mPlane)
```

:::

::: {.panel-tabset}

#### Plot

```{r plot-posteriors-preregistered}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors full exclusion"
#| warning: false


post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% 
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

post_OR <- post %>% filter(family=="binomial") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_segment(data = data_paper, linewidth=1.8,
               aes(x=x-0.2, xend=x+0.2, y=theta, yend=theta), color="#472E7CFF") +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


post_SMD <- post %>% filter(family=="gaussian") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_point(data = post %>% filter(family=="gaussian") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="gaussian") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,1.5), breaks = -1:1) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

cowplot::plot_grid(post_OR, post_SMD, nrow = 1, rel_widths = c(0.7, .3))

```

#### Table

```{r table-preregistered}
#| eval: false

rownames(table_bayesian) <- table_bayesian$Study

table_bayesian %>% 
  select(-Study) |>
  kbl(caption="<b>Table 2 | </b> Hierarchical Bayesian Meta-Analysis",
      align=c('c', 'c'),
      format = "html", table.attr = "style='width:20%;'") %>% 
  kable_classic(html_font = "Cambria") %>%
  row_spec(0, bold = TRUE) %>%
  save_kable("tables/png/Hierarchical Bayesian Meta-Analysis.png", zoom = 3)
  # save_kable("tables/pdf/Hierarchical Bayesian Meta-Analysis.pdf")

table_bayesian %>% 
  select(-Study) |>
  kbl(caption="<b>Table 2 | </b> Hierarchical Bayesian Meta-Analysis",
      format = "html", table.attr = "style='width:50%;'") %>% 
  kable_classic(html_font = "Cambria") %>% 
  kable_material(c("striped", "hover"))
  
```
 
::: 

Number of participants: `r data_table$n[1]`

### Partial


::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study


#### MrAB

```{r}
#| include: false
df <- data_Plane %>% 
               # EXCLUSION: Full Exclusion
                # filter( native_language_is_country_language | Country!=Residence ) %>% 
                # filter( !loi_lower_than_loiX0_33 ) %>%
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_2 )

n_participants <- length( unique(df$subject) )
```


```{r fit-MrAB-partial}
#| code-summary: Show codes
#| output: false

# MrAB
mMrAB1 <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_partialExclusion$MrAB %>% filter(condition=="gain"),
              iter = 10000, refresh = 0)

fe <- fixef(mMrAB1)[,"Estimate"]
re <- ranef(mMrAB1)$Country[,,][,"Estimate"]
postMrAB1 <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="MrAB", x = 1.2)

mMrAB2 <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_partialExclusion$MrAB %>% filter(condition=="loss"),
              iter = 10000, refresh = 0)

fe <- fixef(mMrAB2)[,"Estimate"]
re <- ranef(mMrAB2)$Country[,,][,"Estimate"]
postMrAB2 <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="MrAB", x = 1.8)

```

```{r summary-fit-MrAB1-partial}
#| echo: false
sjPlot::tab_model(mMrAB1)
```

```{r summary-fit-MrAB2-partial}
#| echo: false
sjPlot::tab_model(mMrAB2)
```

#### Game
```{r fit-Game-partial}
#| code-summary: Show codes
#| eval: true
#| output: false

# MrAB
mGame <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_partialExclusion$Game,
             iter = 10000)

fe <- fixef(mGame)[,"Estimate"]
re <- ranef(mGame)$Country[,,][,"Estimate"]
postGame <- data.frame(post=c(fe, fe+re), 
                       Country=c("all", names(re)), 
                       study="Game", x = 3)

sjPlot::tab_model(mGame)
```

```{r summary-fit-Game-partial}
#| echo: false
sjPlot::tab_model(mGame)
```

#### Drink
```{r fit-Drink-partial}
#| code-summary: Show codes
#| eval: true
#| output: false

mDrink <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_partialExclusion$Drink,
             iter = 10000)

fe <- fixef(mDrink)[,"Estimate"]
re <- ranef(mDrink)$Country[,,][,"Estimate"]
postDrink <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="Drink", x = 1)

sjPlot::tab_model(mDrink)
```

```{r summary-fit-Drink-partial}
#| echo: false
sjPlot::tab_model(mDrink)
```

#### Jacket
```{r fit-Jacket-partial}
#| code-summary: Show codes
#| eval: true
#| output: false

mJacket <- brm(theta|se(se_theta) ~ 1 + (1|Country),
               data = theta_partialExclusion$Jacket,
               iter = 10000)

fe <- fixef(mJacket)[,"Estimate"]
re <- ranef(mJacket)$Country[,,][,"Estimate"]
postJacket <- data.frame(post=c(fe, fe+re), 
                         Country=c("all", names(re)), 
                         study="Jacket", x = 4)

sjPlot::tab_model(mJacket)
```

```{r summary-fit-Jacket-partial}
#| echo: false
sjPlot::tab_model(mJacket)
```

#### Play
```{r fit-Play-partial}
#| code-summary: Show codes
#| eval: true
#| output: false

mPlay <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_partialExclusion$Play,
             iter = 10000)

fe <- fixef(mPlay)[,"Estimate"]
re <- ranef(mPlay)$Country[,,][,"Estimate"]
postPlay <- data.frame(post=c(fe, fe+re), 
                       Country=c("all", names(re)), 
                       study="Play", x = 5)

sjPlot::tab_model(mPlay)
```

```{r summary-fit-Play-partial}
#| echo: false
sjPlot::tab_model(mPlay)
```

#### Gym
```{r fit-Gym-partial}
#| code-summary: Show codes
#| eval: true
#| output: false

mGym <- brm(theta|se(se_theta) ~ 1 + (1|Country),
            data = theta_partialExclusion$Gym,
            iter = 10000)

fe <- fixef(mGym)[,"Estimate"]
re <- ranef(mGym)$Country[,,][,"Estimate"]
postGym <- data.frame(post=c(fe, fe+re), 
                      Country=c("all", names(re)), 
                      study="Gym", x = 2)

sjPlot::tab_model(mGym)
```

```{r summary-fit-Gym-partial}
#| echo: false
sjPlot::tab_model(mGym)
```

#### Plane
```{r fit-Plane-partial}
#| code-summary: Show codes
#| eval: true
#| output: false

mPlane <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_partialExclusion$Plane,
              iter = 10000)

fe <- fixef(mPlane)[,"Estimate"]
re <- ranef(mPlane)$Country[,,][,"Estimate"]
postPlane <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="Plane", x = 6)

sjPlot::tab_model(mPlane)
```

```{r summary-fit-Plane-partial}
#| echo: false
sjPlot::tab_model(mPlane)
```

:::

```{r plot-posteriors-partial-exclusion}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors"
#| warning: false

post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% 
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

post_OR <- post %>% filter(family=="binomial") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_segment(data = data_paper, linewidth=1.8,
               aes(x=x-0.2, xend=x+0.2, y=theta, yend=theta), color="#472E7CFF") +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

post_OR <- post %>% filter(family=="binomial") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_segment(data = data_paper, linewidth=1.8,
               aes(x=x-0.2, xend=x+0.2, y=theta, yend=theta), color="#472E7CFF") +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


post_SMD <- post %>% filter(family=="gaussian") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_point(data = post %>% filter(family=="gaussian") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="gaussian") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,1.5), breaks = -1:1) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

cowplot::plot_grid(post_OR, post_SMD, nrow = 1, rel_widths = c(0.7, .3))

```

Number of participants: `r n_participants`



### Full


::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

#### MrAB

```{r}
#| include: false
df <- data_Plane %>% 
               # EXCLUSION: Full Exclusion
                filter( native_language_is_country_language | Country!=Residence ) %>% 
                filter( !loi_lower_than_loiX0_33 ) %>%
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_3 )

n_participants <- length( unique(df$subject) )
```

```{r fit-MrAB-full}
#| code-summary: Show codes
#| output: false

# MrAB
mMrAB1 <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_fullExclusion$MrAB %>% filter(condition=="gain"),
              iter = 10000, refresh = 0)

fe <- fixef(mMrAB1)[,"Estimate"]
re <- ranef(mMrAB1)$Country[,,][,"Estimate"]
postMrAB1 <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="MrAB", x = 1.2)

mMrAB2 <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_fullExclusion$MrAB %>% filter(condition=="loss"),
              iter = 10000, refresh = 0)

fe <- fixef(mMrAB2)[,"Estimate"]
re <- ranef(mMrAB2)$Country[,,][,"Estimate"]
postMrAB2 <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="MrAB", x = 1.8)

```

```{r summary-fit-MrAB1-full}
#| echo: false
sjPlot::tab_model(mMrAB1)
```

```{r summary-fit-MrAB2-full}
#| echo: false
sjPlot::tab_model(mMrAB2)
```

#### Game
```{r fit-Game-full}
#| code-summary: Show codes
#| eval: true
#| output: false

# MrAB
mGame <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_fullExclusion$Game,
             iter = 10000)

fe <- fixef(mGame)[,"Estimate"]
re <- ranef(mGame)$Country[,,][,"Estimate"]
postGame <- data.frame(post=c(fe, fe+re), 
                       Country=c("all", names(re)), 
                       study="Game", x = 3)

```

```{r summary-fit-Game-full}
#| echo: false
sjPlot::tab_model(mGame)
```

#### Drink
```{r fit-Drink-full}
#| code-summary: Show codes
#| eval: true
#| output: false

mDrink <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_fullExclusion$Drink,
             iter = 10000)

fe <- fixef(mDrink)[,"Estimate"]
re <- ranef(mDrink)$Country[,,][,"Estimate"]
postDrink <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="Drink", x = 1)

```

```{r summary-fit-Drink-full}
#| echo: false
sjPlot::tab_model(mDrink)
```

#### Jacket
```{r fit-Jacket-full}
#| code-summary: Show codes
#| eval: true
#| output: false

mJacket <- brm(theta|se(se_theta) ~ 1 + (1|Country),
               data = theta_fullExclusion$Jacket,
               iter = 10000)

fe <- fixef(mJacket)[,"Estimate"]
re <- ranef(mJacket)$Country[,,][,"Estimate"]
postJacket <- data.frame(post=c(fe, fe+re), 
                         Country=c("all", names(re)), 
                         study="Jacket", x = 4)

```

```{r summary-fit-Jacket-full}
#| echo: false
sjPlot::tab_model(mJacket)
```

#### Play
```{r fit-Play-full}
#| code-summary: Show codes
#| eval: true
#| output: false

mPlay <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_fullExclusion$Play,
             iter = 10000)

fe <- fixef(mPlay)[,"Estimate"]
re <- ranef(mPlay)$Country[,,][,"Estimate"]
postPlay <- data.frame(post=c(fe, fe+re), 
                       Country=c("all", names(re)), 
                       study="Play", x = 5)

```

```{r summary-fit-Play-full}
#| echo: false
sjPlot::tab_model(mPlay)
```

#### Gym
```{r fit-Gym-full}
#| code-summary: Show codes
#| eval: true
#| output: false

mGym <- brm(theta|se(se_theta) ~ 1 + (1|Country),
            data = theta_fullExclusion$Gym,
            iter = 10000)

fe <- fixef(mGym)[,"Estimate"]
re <- ranef(mGym)$Country[,,][,"Estimate"]
postGym <- data.frame(post=c(fe, fe+re), 
                      Country=c("all", names(re)), 
                      study="Gym", x = 2)

```

```{r summary-fit-Gym-full}
#| echo: false
sjPlot::tab_model(mGym)
```

#### Plane
```{r fit-Plane-full}
#| code-summary: Show codes
#| eval: true
#| output: false

mPlane <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_fullExclusion$Plane,
              iter = 10000)

fe <- fixef(mPlane)[,"Estimate"]
re <- ranef(mPlane)$Country[,,][,"Estimate"]
postPlane <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="Plane", x = 6)

```

```{r summary-fit-Plane-full}
#| echo: false
sjPlot::tab_model(mPlane)
```

:::

```{r plot-posteriors-preregistered-full}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors full exclusion"
#| warning: false


post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% 
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

post_OR <- post %>% filter(family=="binomial") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_segment(data = data_paper, linewidth=1.8,
               aes(x=x-0.2, xend=x+0.2, y=theta, yend=theta), color="#472E7CFF") +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


post_SMD <- post %>% filter(family=="gaussian") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_point(data = post %>% filter(family=="gaussian") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="gaussian") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,1.5), breaks = -1:1) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

cowplot::plot_grid(post_OR, post_SMD, nrow = 1, rel_widths = c(0.7, .3))

```

Number of participants: `r n_participants`

### Exploratory


::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

#### MrAB

```{r}
#| include: false
df <- data_Plane %>% 
               # EXCLUSION: Full Exclusion
                # filter( native_language_is_country_language | Country!=Residence ) %>% 
                filter( !loi_lower_than_loiX0_33 ) %>%
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_3 )

n_participants <- length( unique(df$subject) )
```


```{r fit-MrAB-exploratory}
#| code-summary: Show codes
#| output: false

# MrAB
mMrAB1 <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_exploratoryExclusion$MrAB %>% filter(condition=="gain"),
              iter = 10000, refresh = 0)

fe <- fixef(mMrAB1)[,"Estimate"]
re <- ranef(mMrAB1)$Country[,,][,"Estimate"]
postMrAB1 <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="MrAB", x = 1.2)

mMrAB2 <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_exploratoryExclusion$MrAB %>% filter(condition=="loss"),
              iter = 10000, refresh = 0)

fe <- fixef(mMrAB2)[,"Estimate"]
re <- ranef(mMrAB2)$Country[,,][,"Estimate"]
postMrAB2 <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="MrAB", x = 1.8)

```

```{r summary-fit-MrAB1-exploratory}
#| echo: false
sjPlot::tab_model(mMrAB1)
```

```{r summary-fit-MrAB2-exploratory}
#| echo: false
sjPlot::tab_model(mMrAB2)
```

#### Game
```{r fit-Game-exploratory}
#| code-summary: Show codes
#| eval: true
#| output: false

# MrAB
mGame <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_exploratoryExclusion$Game,
             iter = 10000)

fe <- fixef(mGame)[,"Estimate"]
re <- ranef(mGame)$Country[,,][,"Estimate"]
postGame <- data.frame(post=c(fe, fe+re), 
                       Country=c("all", names(re)), 
                       study="Game", x = 3)

```

```{r summary-fit-Game-exploratory}
#| echo: false
sjPlot::tab_model(mGame)
```

#### Drink
```{r fit-Drink-exploratory}
#| code-summary: Show codes
#| eval: true
#| output: false

mDrink <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_fullExclusion$Drink,
             iter = 10000)

fe <- fixef(mDrink)[,"Estimate"]
re <- ranef(mDrink)$Country[,,][,"Estimate"]
postDrink <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="Drink", x = 1)

```

```{r summary-fit-Drink-exploratory}
#| echo: false
sjPlot::tab_model(mDrink)
```

#### Jacket
```{r fit-Jacket-exploratory}
#| code-summary: Show codes
#| eval: true
#| output: false

mJacket <- brm(theta|se(se_theta) ~ 1 + (1|Country),
               data = theta_exploratoryExclusion$Jacket,
               iter = 10000)

fe <- fixef(mJacket)[,"Estimate"]
re <- ranef(mJacket)$Country[,,][,"Estimate"]
postJacket <- data.frame(post=c(fe, fe+re), 
                         Country=c("all", names(re)), 
                         study="Jacket", x = 4)

```

```{r summary-fit-Jacket-exploratory}
#| echo: false
sjPlot::tab_model(mJacket)
```

#### Play
```{r fit-Play-exploratory}
#| code-summary: Show codes
#| eval: true
#| output: false

mPlay <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_exploratoryExclusion$Play,
             iter = 10000)

fe <- fixef(mPlay)[,"Estimate"]
re <- ranef(mPlay)$Country[,,][,"Estimate"]
postPlay <- data.frame(post=c(fe, fe+re), 
                       Country=c("all", names(re)), 
                       study="Play", x = 5)

```

```{r summary-fit-Play-exploratory}
#| echo: false
sjPlot::tab_model(mPlay)
```

#### Gym
```{r fit-Gym-exploratory}
#| code-summary: Show codes
#| eval: true
#| output: false

mGym <- brm(theta|se(se_theta) ~ 1 + (1|Country),
            data = theta_exploratoryExclusion$Gym,
            iter = 10000)

fe <- fixef(mGym)[,"Estimate"]
re <- ranef(mGym)$Country[,,][,"Estimate"]
postGym <- data.frame(post=c(fe, fe+re), 
                      Country=c("all", names(re)), 
                      study="Gym", x = 2)

```

```{r summary-fit-Gym-exploratory}
#| echo: false
sjPlot::tab_model(mGym)
```

#### Plane
```{r fit-Plane-exploratory}
#| code-summary: Show codes
#| eval: true
#| output: false

mPlane <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_exploratoryExclusion$Plane,
              iter = 10000)

fe <- fixef(mPlane)[,"Estimate"]
re <- ranef(mPlane)$Country[,,][,"Estimate"]
postPlane <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="Plane", x = 6)

```

```{r summary-fit-Plane-exploratory}
#| echo: false
sjPlot::tab_model(mPlane)
```

:::

```{r plot-posteriors-exploratory}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors full exclusion"
#| warning: false


post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% 
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

post_OR <- post %>% filter(family=="binomial") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_segment(data = data_paper, linewidth=1.8,
               aes(x=x-0.2, xend=x+0.2, y=theta, yend=theta), color="#472E7CFF") +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


post_SMD <- post %>% filter(family=="gaussian") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_point(data = post %>% filter(family=="gaussian") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="gaussian") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,1.5), breaks = -1:1) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

cowplot::plot_grid(post_OR, post_SMD, nrow = 1, rel_widths = c(0.7, .3))

```

Number of participants: `r n_participants`


### None

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

#### MrAB

```{r}
#| include: false
df <- data_Plane

n_participants <- length( unique(df$subject) )
```

```{r fit-MrAB-no}
#| code-summary: Show codes
#| output: false

# MrAB
mMrAB1 <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_noExclusion$MrAB %>% filter(condition=="gain"),
              iter = 10000, refresh = 0)

fe <- fixef(mMrAB1)[,"Estimate"]
re <- ranef(mMrAB1)$Country[,,][,"Estimate"]
postMrAB1 <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="MrAB", x = 1.2)

mMrAB2 <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_noExclusion$MrAB %>% filter(condition=="loss"),
              iter = 10000, refresh = 0)

fe <- fixef(mMrAB2)[,"Estimate"]
re <- ranef(mMrAB2)$Country[,,][,"Estimate"]
postMrAB2 <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="MrAB", x = 1.8)

```

```{r summary-fit-MrAB1-no}
#| echo: false
sjPlot::tab_model(mMrAB1)
```

```{r summary-fit-MrAB2-no}
#| echo: false
sjPlot::tab_model(mMrAB2)
```

#### Game
```{r fit-Game-no}
#| code-summary: Show codes
#| eval: true
#| output: false

# MrAB
mGame <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_noExclusion$Game,
             iter = 10000)

fe <- fixef(mGame)[,"Estimate"]
re <- ranef(mGame)$Country[,,][,"Estimate"]
postGame <- data.frame(post=c(fe, fe+re), 
                       Country=c("all", names(re)), 
                       study="Game", x = 3)

sjPlot::tab_model(mGame)
```

```{r summary-fit-Game-no}
#| echo: false
sjPlot::tab_model(mGame)
```

#### Drink
```{r fit-Drink-no}
#| code-summary: Show codes
#| eval: true
#| output: false

mDrink <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_noExclusion$Drink,
             iter = 10000)

fe <- fixef(mDrink)[,"Estimate"]
re <- ranef(mDrink)$Country[,,][,"Estimate"]
postDrink <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="Drink", x = 1)

sjPlot::tab_model(mDrink)
```

```{r summary-fit-Drink-no}
#| echo: false
sjPlot::tab_model(mDrink)
```

#### Jacket
```{r fit-Jacket-no}
#| code-summary: Show codes
#| eval: true
#| output: false

mJacket <- brm(theta|se(se_theta) ~ 1 + (1|Country),
               data = theta_noExclusion$Jacket,
               iter = 10000)

fe <- fixef(mJacket)[,"Estimate"]
re <- ranef(mJacket)$Country[,,][,"Estimate"]
postJacket <- data.frame(post=c(fe, fe+re), 
                         Country=c("all", names(re)), 
                         study="Jacket", x = 4)

sjPlot::tab_model(mJacket)
```

```{r summary-fit-Jacket-no}
#| echo: false
sjPlot::tab_model(mJacket)
```

#### Play
```{r fit-Play-no}
#| code-summary: Show codes
#| eval: true
#| output: false

mPlay <- brm(theta|se(se_theta) ~ 1 + (1|Country),
             data = theta_noExclusion$Play,
             iter = 10000)

fe <- fixef(mPlay)[,"Estimate"]
re <- ranef(mPlay)$Country[,,][,"Estimate"]
postPlay <- data.frame(post=c(fe, fe+re), 
                       Country=c("all", names(re)), 
                       study="Play", x = 5)

sjPlot::tab_model(mPlay)
```

```{r summary-fit-Play-no}
#| echo: false
sjPlot::tab_model(mPlay)
```

#### Gym
```{r fit-Gym-no}
#| code-summary: Show codes
#| eval: true
#| output: false

mGym <- brm(theta|se(se_theta) ~ 1 + (1|Country),
            data = theta_noExclusion$Gym,
            iter = 10000)

fe <- fixef(mGym)[,"Estimate"]
re <- ranef(mGym)$Country[,,][,"Estimate"]
postGym <- data.frame(post=c(fe, fe+re), 
                      Country=c("all", names(re)), 
                      study="Gym", x = 2)

sjPlot::tab_model(mGym)
```

```{r summary-fit-Gym-no}
#| echo: false
sjPlot::tab_model(mGym)
```

#### Plane
```{r fit-Plane-no}
#| code-summary: Show codes
#| eval: true
#| output: false

mPlane <- brm(theta|se(se_theta) ~ 1 + (1|Country),
              data = theta_noExclusion$Plane,
              iter = 10000)

fe <- fixef(mPlane)[,"Estimate"]
re <- ranef(mPlane)$Country[,,][,"Estimate"]
postPlane <- data.frame(post=c(fe, fe+re), 
                        Country=c("all", names(re)), 
                        study="Plane", x = 6)

sjPlot::tab_model(mPlane)
```

```{r summary-fit-Plane-no}
#| echo: false
sjPlot::tab_model(mPlane)
```

:::

```{r plot-posteriors-no-exclusion}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors"
#| warning: false

post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% 
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

post_OR <- post %>% filter(family=="binomial") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_segment(data = data_paper, linewidth=1.8,
               aes(x=x-0.2, xend=x+0.2, y=theta, yend=theta), color="#472E7CFF") +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

post_OR <- post %>% filter(family=="binomial") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_segment(data = data_paper, linewidth=1.8,
               aes(x=x-0.2, xend=x+0.2, y=theta, yend=theta), color="#472E7CFF") +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="binomial") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5,3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


post_SMD <- post %>% filter(family=="gaussian") %>% 
  filter(Country!="all") %>% 
  ggplot(aes(x, post, color=Country)) +
  geom_jitter( width = 0.1, alpha=0.7, color="gray", size=2 ) +
  geom_point(data = post %>% filter(family=="gaussian") %>% 
               filter(Country=="all"), color="#228B8DFF", size=5) +
  geom_point(data = post %>% filter(family=="gaussian") %>% 
               filter(Country=="all"), color="white", size=3) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,1.5), breaks = -1:1) + 
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

cowplot::plot_grid(post_OR, post_SMD, nrow = 1, rel_widths = c(0.7, .3))

```

Number of participants: `r n_participants`

:::



##  Unpooled Analysis

<br>

In this section we perform a Bayesian unpooled analysis. We will compute the effect size for each scenario and country independently. We will then compare each of them with the effect sizes found in the original papers.

<br>

::: {.panel-tabset}

### Preregistered

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

#### MrAB

```{r fit-MrAB-unpooled-full-exclusion}
#| code-summary: Show codes
#| output: false

mMrAB1 <- brm(response ~ scenario * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="gain") %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
                mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )), 
              iter = 5000, refresh = 0, family="bernoulli")


mMrAB2 <- brm(response ~ scenario * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="loss") %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
                mutate(scenario=factor(scenario, levels = c("loss-gain VS loss", "loss-loss VS loss") )),
              iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-MrAB-unpooled-posteriors-full-exclusion}
#| fig-width: 6
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mMrAB1)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "scenario" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot1 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postMrAB1 <- post_plot1 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB1 <- post_plot1 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")


post <- prepare_predictions(mMrAB2)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "scenario" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot2 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.8) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postMrAB2 <- post_plot2 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB2 <- post_plot2 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.line.y = element_blank(),
        axis.ticks.y = element_blank(),
        legend.position = "none")

cowplot::plot_grid(plMrAB1, plMrAB2, nrow = 1)

```

```{r summary-fit-MrAB1-unpooled-full-exclusion}
#| echo: false


table_unpooled <- post_plot1 %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("MrAB1")
    } else {
      return("")
    } 
  }

table_unpooled <- rbind(apply(table_unpooled[1,], 2, empty), table_unpooled)

rmarkdown::paged_table(
  post_plot1 %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

```{r summary-fit-MrAB2-unpooled-full-exclusion}
#| echo: false


tu <- post_plot1 %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("MrAB2")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(tu[1,], 2, empty), tu)
  )

rmarkdown::paged_table(
  post_plot2 %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Game

```{r fit-Game-unpooled-full-exclusion}
#| code-summary: Show codes
#| output: false

mGame <- brm(response ~ buyer * Country,
              data = data_Game %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ),
              iter = 5000, refresh = 0, family="bernoulli")

```

```{r plot-Game-unpooled-posteriors-full-exclusion}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGame)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "buyer" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Game", family="binomial", x=3) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postGame <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Game-unpooled-full-exclusion}
#| echo: false


tu <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Game")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(tu[1,], 2, empty), tu)
  )

rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Drink

```{r fit-Drink-unpooled-full-exclusion}
#| code-summary: Show codes
#| output: false

mDrink <- brm(response ~ store * Country,
              data = data_Drink %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
                # Remove really really extreme outliers
                filter(response<10000 & response>=0) %>% 
                mutate(response=response+1, logResp=log(response)) %>% 
                group_by(Country) %>%
                mutate(response=as.vector(scale(logResp))) %>% 
                ungroup(),
              iter = 5000, refresh = 0)

```

```{r plot-Drink-unpooled-posteriors-full-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mDrink)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "store" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]


post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Drink", family="gaussian", x=1) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})
 
postDrink <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>%   
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Drink-unpooled-full-exclusion}
#| echo: false


tu <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Drink")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(tu[1,], 2, empty), tu)
  )

rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Jacket

```{r fit-Jacket-unpooled-full-exclusion}
#| code-summary: Show codes
#| output: false

mJacket <- brm(response ~ price * Country,
               data = data_Jacket %>% 
                 # EXCLUSION: Full Exclusion
                 filter( !(Country %in% countries2remove) ) %>% 
                 filter( attention_check_grater_than_3 ),
               iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Jacket-unpooled-posteriors-full-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mJacket)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "price" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Jacket", family="binomial", x=4) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postJacket <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Jacket-unpooled-full-exclusion}
#| echo: false


tu <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Jacket")
    } else {
      return("")
    } 
  }

tu <- 
  rbind(
    table_unpooled,
    rbind(apply(tu[1,], 2, empty), tu)
  )

rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Play

```{r fit-Play-unpooled-full-exclusion}
#| code-summary: Show codes
#| output: false

mPlay <- brm(response ~ loss * Country,
             data = data_Play %>% 
               # EXCLUSION: Full Exclusion
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_3 ) %>% 
               mutate(loss=factor(loss, levels = c("ticket", "cash"))),
             iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Play-unpooled-posteriors-full-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlay)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "loss" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Play", family="binomial", x=5) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postPlay <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Play-unpooled-full-exclusion}
#| echo: false


tu <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Play")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(tu[1,], 2, empty), tu)
  )
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Gym

```{r fit-Gym-unpooled-full-exclusion}
#| code-summary: Show codes
#| output: false

mGym <- brm(response ~ frame * Country,
            data = data_Gym %>% 
              # EXCLUSION: Full Exclusion
              filter( !(Country %in% countries2remove) ) %>% 
              filter( attention_check_grater_than_3 ) %>% 
              group_by(Country) %>%
                mutate(response=as.vector(scale(response))) %>% 
                ungroup(),
             iter = 5000, refresh = 0)
```

```{r plot-Gym-unpooled-posteriors-full-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGym)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta" #
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "frame" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Gym", family="binomial", x=2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postGym <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Gym-unpooled-full-exclusion}
#| echo: false


tu <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Gym")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(tu[1,], 2, empty), tu)
  )

rmarkdown::paged_table( 
  post_plot %>% #
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Plane

```{r fit-Plane-unpooled-full-exclusion}
#| code-summary: Show codes
#| output: false

mPlane <- brm(response ~ coupon * Country,
             data = data_Plane %>% 
               # EXCLUSION: Full Exclusion
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_3 ),
             iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Plane-unpooled-posteriors-full-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlane)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "coupon" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Plane", family="binomial", x=6) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postPlane <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Plane-unpooled-full-exclusion}
#| echo: false


tu <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Plane")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(tu[1,], 2, empty), tu)
  )

rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

:::

```{r unpooled-replication-rate}
#| echo: false

post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% # Recalcu
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

unpooled <- map_dfr(as.list(unique(post$Country)), function(country){
  rbind(
    post %>% 
      filter(study=='MrAB') %>% 
      filter(Country==country) %>% 
      mutate(replication=(credible[x==1.2]=='yes') & (credible[x==1.8]=='yes')) %>% 
      filter(row_number()==1),
    post %>% 
      filter(study!='MrAB') %>% 
      filter(Country==country) %>% 
      mutate(replication=credible=='yes'),
  )
})

 # effects for `r unpooled$Country |> unique() |> length()` countries, for a total of 147 effects, and found an overall replication rate of `r unpooled$replication |> mean() |> round(digits=3) * 100`%
```

We estimated `r (n_studies = unpooled$x |> unique() |> length())` effects for `r (n_countries = unpooled$Country |> unique() |> length())` countries, for a total of `r n_studies*n_countries` effects, and found an overall replication rate of `r unpooled$replication |> mean() |> round(digits=3) * 100`%

::: {.panel-tabset}


#### Plot

```{r plot-unpooled-posteriors-full-exclusion}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors"
#| warning: false
       
post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% # Recalcu
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

plotOR <- post %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5, 3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plotSMD <- post %>% filter(family=="gaussian") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,1.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


cowplot::plot_grid(plotOR, plotSMD, nrow = 1, rel_widths = c(0.7, .3))

```

#### Table

```{r table-preregistered-unpooled}
#| eval: false


table_unpooled %>% 
  kbl(caption="<b>Table 3 | </b> Unpooled Analysis",
      format = "html", table.attr = "style='width:50%;'") %>% 
  kable_classic(html_font = "Cambria") %>% 
  row_spec(0, bold = TRUE) %>%
  save_kable("tables/png/Unpooled Analysis.png", zoom = 3)
  # save_kable("tables/pdf/Unpooled Analysis.pdf")
  
table_unpooled %>% 
  kbl(caption="<b>Table 3 | </b> Unpooled Analysis",
      format = "html", table.attr = "style='width:50%;'") %>% 
  kable_classic(html_font = "Cambria") %>% 
  kable_material(c("striped", "hover"))

```

:::

### Partial

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

#### MrAB

```{r fit-MrAB-unpooled-partial-exclusion}
#| code-summary: Show codes
#| output: false

mMrAB1 <- brm(response ~ scenario * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="gain") %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_2 ) %>% 
                mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )), 
              iter = 5000, refresh = 0, family="bernoulli")


mMrAB2 <- brm(response ~ scenario * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="loss") %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_2 ) %>% 
                mutate(scenario=factor(scenario, levels = c("loss-gain VS loss", "loss-loss VS loss") )),
              iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-MrAB-unpooled-posteriors-partial-exclusion}
#| fig-width: 6
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mMrAB1)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "scenario" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot1 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postMrAB1 <- post_plot1 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB1 <- post_plot1 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")


post <- prepare_predictions(mMrAB2)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "scenario" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot2 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.8) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postMrAB2 <- post_plot2 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB2 <- post_plot2 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.line.y = element_blank(),
        axis.ticks.y = element_blank(),
        legend.position = "none")

cowplot::plot_grid(plMrAB1, plMrAB2, nrow = 1)

```

```{r summary-fit-MrAB1-unpooled-partial-exclusion}
#| echo: false
rmarkdown::paged_table(
  post_plot1 %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

```{r summary-fit-MrAB2-unpooled-partial-exclusion}
#| echo: false
rmarkdown::paged_table(
  post_plot2 %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Game

```{r fit-Game-unpooled-partial-exclusion}
#| code-summary: Show codes
#| output: false

mGame <- brm(response ~ buyer * Country,
              data = data_Game %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_2 ),
              iter = 5000, refresh = 0, family="bernoulli")

```

```{r plot-Game-unpooled-posteriors-partial-exclusion}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGame)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "buyer" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Game", family="binomial", x=3) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postGame <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Game-unpooled-partial-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Drink

```{r fit-Drink-unpooled-partial-exclusion}
#| code-summary: Show codes
#| output: false

mDrink <- brm(response ~ store * Country,
              data = data_Drink %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_2 ) %>% 
                # Remove really really extreme outliers
                filter(response<10000 & response>=0) %>% 
                mutate(response=response+1, logResp=log(response)) %>% 
                group_by(Country) %>%
                mutate(response=as.vector(scale(logResp))) %>% 
                ungroup(),
              iter = 5000, refresh = 0)

```

```{r plot-Drink-unpooled-posteriors-partial-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mDrink)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "store" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]


post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Drink", family="gaussian", x=1) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})
 
postDrink <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>%   
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Drink-unpooled-partial-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Jacket

```{r fit-Jacket-unpooled-partial-exclusion}
#| code-summary: Show codes
#| output: false

mJacket <- brm(response ~ price * Country,
               data = data_Jacket %>% 
                 # EXCLUSION: Full Exclusion
                 filter( !(Country %in% countries2remove) ) %>% 
                 filter( attention_check_grater_than_2 ),
               iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Jacket-unpooled-posteriors-partial-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mJacket)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "price" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Jacket", family="binomial", x=4) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postJacket <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Jacket-unpooled-partial-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Play

```{r fit-Play-unpooled-partial-exclusion}
#| code-summary: Show codes
#| output: false

mPlay <- brm(response ~ loss * Country,
             data = data_Play %>% 
               # EXCLUSION: Full Exclusion
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_2 ) %>% 
               mutate(loss=factor(loss, levels = c("ticket", "cash"))),
             iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Play-unpooled-posteriors-partial-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlay)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "loss" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Play", family="binomial", x=5) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postPlay <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Play-unpooled-partial-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Gym

```{r fit-Gym-unpooled-partial-exclusion}
#| code-summary: Show codes
#| output: false

mGym <- brm(response ~ frame * Country,
            data = data_Gym %>% 
              # EXCLUSION: Full Exclusion
              filter( !(Country %in% countries2remove) ) %>% 
              filter( attention_check_grater_than_2 ) %>% 
              group_by(Country) %>%
                mutate(response=as.vector(scale(response))) %>% 
                ungroup(),
             iter = 5000, refresh = 0)
```

```{r plot-Gym-unpooled-posteriors-partial-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGym)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta" #
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "frame" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Gym", family="binomial", x=2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postGym <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Gym-unpooled-partial-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% #
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Plane

```{r fit-Plane-unpooled-partial-exclusion}
#| code-summary: Show codes
#| output: false

mPlane <- brm(response ~ coupon * Country,
             data = data_Plane %>% 
               # EXCLUSION: Full Exclusion
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_2 ),
             iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Plane-unpooled-posteriors-partial-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlane)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "coupon" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Plane", family="binomial", x=6) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postPlane <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Plane-unpooled-partial-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

:::

```{r plot-unpooled-posteriors-partial-exclusion}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors"
#| warning: false
       
post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% 
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

plotOR <- post %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5, 3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plotSMD <- post %>% filter(family=="gaussian") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,1.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


cowplot::plot_grid(plotOR, plotSMD, nrow = 1, rel_widths = c(0.7, .3))

```



### Full

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

#### MrAB

```{r fit-MrAB-unpooled-full}
#| code-summary: Show codes
#| output: false

mMrAB1 <- brm(response ~ scenario * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="gain") %>% 
                # EXCLUSION: Full Exclusion
                filter(native_language_is_country_language | Country!=Residence) %>% 
                filter( !loi_lower_than_loiX0_33 ) %>% 
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
                mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )), 
              iter = 5000, refresh = 0, family="bernoulli")


mMrAB2 <- brm(response ~ scenario * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="loss") %>% 
                # EXCLUSION: Full Exclusion
                filter(native_language_is_country_language | Country!=Residence) %>% 
                filter( !loi_lower_than_loiX0_33 ) %>%
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
                mutate(scenario=factor(scenario, levels = c("loss-gain VS loss", "loss-loss VS loss") )),
              iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-MrAB-unpooled-posteriors-full}
#| fig-width: 6
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mMrAB1)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "scenario" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot1 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postMrAB1 <- post_plot1 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB1 <- post_plot1 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")


post <- prepare_predictions(mMrAB2)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "scenario" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot2 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.8) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postMrAB2 <- post_plot2 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB2 <- post_plot2 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.line.y = element_blank(),
        axis.ticks.y = element_blank(),
        legend.position = "none")

cowplot::plot_grid(plMrAB1, plMrAB2, nrow = 1)

```

```{r summary-fit-MrAB1-unpooled-full}
#| echo: false


table_unpooled <- post_plot1 %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("MrAB1")
    } else {
      return("")
    } 
  }

table_unpooled <- rbind(apply(table_unpooled[1,], 2, empty), table_unpooled)

rmarkdown::paged_table(
  post_plot1 %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

```{r summary-fit-MrAB2-unpooled-full}
#| echo: false

table_unpooled <- post_plot2 %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("MrAB2")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(table_unpooled[1,], 2, empty), table_unpooled)
  )

rmarkdown::paged_table(
  post_plot2 %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Game

```{r fit-Game-unpooled-full}
#| code-summary: Show codes
#| output: false

mGame <- brm(response ~ buyer * Country,
              data = data_Game %>% 
                # EXCLUSION: Full Exclusion
                filter(native_language_is_country_language | Country!=Residence) %>% 
                filter( !loi_lower_than_loiX0_33 ) %>%
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ),
              iter = 5000, refresh = 0, family="bernoulli")

```

```{r plot-Game-unpooled-posteriors-full}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGame)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "buyer" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Game", family="binomial", x=3) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postGame <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Game-unpooled-full}
#| echo: false


table_unpooled <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Game")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(table_unpooled[1,], 2, empty), table_unpooled)
  )

rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Drink

```{r fit-Drink-unpooled-full}
#| code-summary: Show codes
#| output: false

mDrink <- brm(response ~ store * Country,
              data = data_Drink %>% 
                # EXCLUSION: Full Exclusion
                filter( native_language_is_country_language | Country!=Residence ) %>% 
                filter( !loi_lower_than_loiX0_33 ) %>%
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
                # Remove really really extreme outliers
                filter(response<10000 & response>=0) %>% 
                mutate(response=response+1, logResp=log(response)) %>% 
                group_by(Country) %>%
                mutate(response=as.vector(scale(logResp))) %>% 
                ungroup(),
              iter = 5000, refresh = 0)

```

```{r plot-Drink-unpooled-posteriors-full}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mDrink)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "store" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]


post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Drink", family="gaussian", x=1) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})
 
postDrink <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>%   
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Drink-unpooled-full}
#| echo: false


table_unpooled <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Drink")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(table_unpooled[1,], 2, empty), table_unpooled)
  )

rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Jacket

```{r fit-Jacket-unpooled-full}
#| code-summary: Show codes
#| output: false

mJacket <- brm(response ~ price * Country,
               data = data_Jacket %>% 
                 # EXCLUSION: Full Exclusion
                filter( native_language_is_country_language | Country!= Residence ) %>% 
                filter( !loi_lower_than_loiX0_33 ) %>%
                 filter( !(Country %in% countries2remove) ) %>% 
                 filter( attention_check_grater_than_3 ),
               iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Jacket-unpooled-posteriors-full}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mJacket)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "price" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Jacket", family="binomial", x=4) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postJacket <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Jacket-unpooled-full}
#| echo: false


table_unpooled <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Jacket")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(table_unpooled[1,], 2, empty), table_unpooled)
  )

rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Play

```{r fit-Play-unpooled-full}
#| code-summary: Show codes
#| output: false

mPlay <- brm(response ~ loss * Country,
             data = data_Play %>% 
               # EXCLUSION: Full Exclusion
                filter( native_language_is_country_language | Country!= Residence ) %>% 
                filter( !loi_lower_than_loiX0_33 ) %>%
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_3 ) %>% 
               mutate(loss=factor(loss, levels = c("ticket", "cash"))),
             iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Play-unpooled-posteriors-full}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlay)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "loss" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Play", family="binomial", x=5) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postPlay <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Play-unpooled-full}
#| echo: false


table_unpooled <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Play")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(table_unpooled[1,], 2, empty), table_unpooled)
  )


rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Gym

```{r fit-Gym-unpooled-full}
#| code-summary: Show codes
#| output: false

mGym <- brm(response ~ frame * Country,
            data = data_Gym %>% 
              # EXCLUSION: Full Exclusion
                filter( native_language_is_country_language | Country!= Residence ) %>% 
                filter( !loi_lower_than_loiX0_33 ) %>%
              filter( !(Country %in% countries2remove) ) %>% 
              filter( attention_check_grater_than_3 ) %>% 
              group_by(Country) %>%
                mutate(response=as.vector(scale(response))) %>% 
                ungroup(),
             iter = 5000, refresh = 0)
```

```{r plot-Gym-unpooled-posteriors-full}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGym)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta" #
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "frame" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Gym", family="binomial", x=2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postGym <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Gym-unpooled-full}
#| echo: false


table_unpooled <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Gym")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(table_unpooled[1,], 2, empty), table_unpooled)
  )

rmarkdown::paged_table( 
  post_plot %>% #
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Plane

```{r fit-Plane-unpooled-full}
#| code-summary: Show codes
#| output: false

mPlane <- brm(response ~ coupon * Country,
             data = data_Plane %>% 
               # EXCLUSION: Full Exclusion
                filter( native_language_is_country_language | Country!=Residence ) %>% 
                filter( !loi_lower_than_loiX0_33 ) %>%
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_3 ),
             iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Plane-unpooled-posteriors-full}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlane)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "coupon" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Plane", family="binomial", x=6) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postPlane <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Plane-unpooled-full}
#| echo: false


table_unpooled <- post_plot %>% 
  group_by(Country) %>% mutate(mu=mean(theta)) %>% 
  filter(row_number()==1) %>% 
  select(Country, mu, lower, upper) %>% 
  ungroup() %>% 
  mutate(`CIs (95%)`=str_c(round(lower,2), round(upper,2), sep = ' - '),
         mu=round(mu,2)) %>% 
  rename(Estimate = mu) %>% 
  mutate(` ` = "") %>% 
  .[,c(6,1,2,5)] 


empty <- function(x){ 
  if(x==''){
    return("Plane")
    } else {
      return("")
    } 
  }

table_unpooled <- 
  rbind(
    table_unpooled,
    rbind(apply(table_unpooled[1,], 2, empty), table_unpooled)
  )

rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

:::

```{r plot-unpooled-posteriors-full}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors"
#| warning: false
       
post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% # Recalcu
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

plotOR <- post %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5, 3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plotSMD <- post %>% filter(family=="gaussian") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,1.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


cowplot::plot_grid(plotOR, plotSMD, nrow = 1, rel_widths = c(0.7, .3))

```

### Exploratory

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

#### MrAB

```{r fit-MrAB-unpooled-exploratory}
#| code-summary: Show codes
#| output: false

mMrAB1 <- brm(response ~ scenario * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="gain") %>% 
                # EXCLUSION: Exploratory Exclusion
                filter( !loi_lower_than_loiX0_33 ) %>% 
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
                mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )), 
              iter = 5000, refresh = 0, family="bernoulli")


mMrAB2 <- brm(response ~ scenario * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="loss") %>% 
                # EXCLUSION: Exploratory Exclusion
                filter( !loi_lower_than_loiX0_33 ) %>% 
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>%   
                mutate(scenario=factor(scenario, levels = c("loss-gain VS loss", "loss-loss VS loss") )),
              iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-MrAB-unpooled-posteriors-exploratory}
#| fig-width: 6
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mMrAB1)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "scenario" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot1 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postMrAB1 <- post_plot1 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB1 <- post_plot1 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")


post <- prepare_predictions(mMrAB2)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "scenario" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot2 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.8) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postMrAB2 <- post_plot2 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB2 <- post_plot2 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.line.y = element_blank(),
        axis.ticks.y = element_blank(),
        legend.position = "none")

cowplot::plot_grid(plMrAB1, plMrAB2, nrow = 1)

```

```{r summary-fit-MrAB1-unpooled-exploratory}
#| echo: false
rmarkdown::paged_table(
  post_plot1 %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

```{r summary-fit-MrAB2-unpooled-exploratory}
#| echo: false
rmarkdown::paged_table(
  post_plot2 %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Game

```{r fit-Game-unpooled-exploratory}
#| code-summary: Show codes
#| output: false

mGame <- brm(response ~ buyer * Country,
             data = data_Game %>% 
               # EXCLUSION: Exploratory Exclusion
               filter( !loi_lower_than_loiX0_33 ) %>% 
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_3 ),
              iter = 5000, refresh = 0, family="bernoulli")

```

```{r plot-Game-unpooled-posteriors-exploratory}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGame)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "buyer" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Game", family="binomial", x=3) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postGame <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Game-unpooled-exploratory}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Drink

```{r fit-Drink-unpooled-exploratory}
#| code-summary: Show codes
#| output: false

mDrink <- brm(response ~ store * Country,
              data = data_Drink %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
                # Remove really really extreme outliers
                filter(response<10000 & response>=0) %>% 
                mutate(response=response+1, logResp=log(response)) %>% 
                group_by(Country) %>%
                mutate(response=as.vector(scale(logResp))) %>% 
                ungroup(),
              iter = 5000, refresh = 0)

```

```{r plot-Drink-unpooled-posteriors-exploratory}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mDrink)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "store" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]


post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Drink", family="gaussian", x=1) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})
 
postDrink <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>%   
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Drink-unpooled-exploratory}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Jacket

```{r fit-Jacket-unpooled-exploratory}
#| code-summary: Show codes
#| output: false

mJacket <- brm(response ~ price * Country,
               data = data_Jacket %>% 
                 # EXCLUSION: Exploratory Exclusion
                filter( !loi_lower_than_loiX0_33 ) %>% 
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ),
               iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Jacket-unpooled-posteriors-exploratory}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mJacket)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "price" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Jacket", family="binomial", x=4) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postJacket <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Jacket-unpooled-exploratory}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Play

```{r fit-Play-unpooled-exploratory}
#| code-summary: Show codes
#| output: false

mPlay <- brm(response ~ loss * Country,
             data = data_Play %>% 
               # EXCLUSION: Exploratory Exclusion
               filter( !loi_lower_than_loiX0_33 ) %>% 
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_3 ) %>% 
               mutate(loss=factor(loss, levels = c("ticket", "cash"))),
             iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Play-unpooled-posteriors-exploratory}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlay)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "loss" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Play", family="binomial", x=5) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postPlay <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Play-unpooled-exploratory}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Gym

```{r fit-Gym-unpooled-exploratory}
#| code-summary: Show codes
#| output: false

mGym <- brm(response ~ frame * Country,
            data = data_Gym %>% 
              # EXCLUSION: Exploratory Exclusion
              filter( !loi_lower_than_loiX0_33 ) %>% 
              filter( !(Country %in% countries2remove) ) %>% 
              filter( attention_check_grater_than_3 ) %>%  
              group_by(Country) %>%
                mutate(response=as.vector(scale(response))) %>% 
                ungroup(),
             iter = 5000, refresh = 0)
```

```{r plot-Gym-unpooled-posteriors-exploratory}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGym)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta" #
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "frame" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Gym", family="binomial", x=2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postGym <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Gym-unpooled-exploratory}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% #
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Plane

```{r fit-Plane-unpooled-exploratory}
#| code-summary: Show codes
#| output: false

mPlane <- brm(response ~ coupon * Country,
             data = data_Plane %>% 
               # EXCLUSION: Exploratory Exclusion
              filter( !loi_lower_than_loiX0_33 ) %>% 
              filter( !(Country %in% countries2remove) ) %>% 
              filter( attention_check_grater_than_3 ),
             iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Plane-unpooled-posteriors-exploratory}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlane)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "coupon" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Plane", family="binomial", x=6) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postPlane <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Plane-unpooled-exploratory}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

:::

```{r plot-unpooled-posteriors-exploratory}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors"
#| warning: false
       
post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% 
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

plotOR <- post %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5, 3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plotSMD <- post %>% filter(family=="gaussian") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,1.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


cowplot::plot_grid(plotOR, plotSMD, nrow = 1, rel_widths = c(0.7, .3))

```


### None

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

#### MrAB

```{r fit-MrAB-unpooled-no-exclusion}
#| code-summary: Show codes
#| output: false

mMrAB1 <- brm(response ~ scenario * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="gain") %>% 
                mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )), 
              iter = 5000, refresh = 0, family="bernoulli")


mMrAB2 <- brm(response ~ scenario * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="loss") %>% 
                mutate(scenario=factor(scenario, levels = c("loss-gain VS loss", "loss-loss VS loss") )),
              iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-MrAB-unpooled-posteriors-no-exclusion}
#| fig-width: 6
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mMrAB1)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "scenario" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot1 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postMrAB1 <- post_plot1 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB1 <- post_plot1 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")


post <- prepare_predictions(mMrAB2)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "scenario" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot2 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.8) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postMrAB2 <- post_plot2 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB2 <- post_plot2 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.line.y = element_blank(),
        axis.ticks.y = element_blank(),
        legend.position = "none")

cowplot::plot_grid(plMrAB1, plMrAB2, nrow = 1)

```

```{r summary-fit-MrAB1-unpooled-no-exclusion}
#| echo: false
rmarkdown::paged_table(
  post_plot1 %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

```{r summary-fit-MrAB2-unpooled-no-exclusion}
#| echo: false
rmarkdown::paged_table(
  post_plot2 %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Game

```{r fit-Game-unpooled-no-exclusion}
#| code-summary: Show codes
#| output: false

mGame <- brm(response ~ buyer * Country,
              data = data_Game,
              iter = 5000, refresh = 0, family="bernoulli")

```

```{r plot-Game-unpooled-posteriors-no-exclusion}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGame)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "buyer" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Game", family="binomial", x=3) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postGame <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Game-unpooled-no-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Drink

```{r fit-Drink-unpooled-no-exclusion}
#| code-summary: Show codes
#| output: false

mDrink <- brm(response ~ store * Country,
              data = data_Drink %>% 
                # Remove really really extreme outliers
                filter(response<10000 & response>=0) %>% 
                mutate(response=response+1, logResp=log(response)) %>% 
                group_by(Country) %>%
                mutate(response=as.vector(scale(logResp))) %>% 
                ungroup(),
              iter = 5000, refresh = 0)

```

```{r plot-Drink-unpooled-posteriors-no-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mDrink)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "store" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]


post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Drink", family="gaussian", x=1) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})
 
postDrink <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>%   
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Drink-unpooled-no-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Jacket

```{r fit-Jacket-unpooled-no-exclusion}
#| code-summary: Show codes
#| output: false

mJacket <- brm(response ~ price * Country,
               data = data_Jacket,
               iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Jacket-unpooled-posteriors-no-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mJacket)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "price" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Jacket", family="binomial", x=4) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postJacket <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Jacket-unpooled-no-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Play

```{r fit-Play-unpooled-no-exclusion}
#| code-summary: Show codes
#| output: false

mPlay <- brm(response ~ loss * Country,
             data = data_Play %>% 
               mutate(loss=factor(loss, levels = c("ticket", "cash"))),
             iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Play-unpooled-posteriors-no-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlay)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "loss" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Play", family="binomial", x=5) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postPlay <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Play-unpooled-no-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Gym

```{r fit-Gym-unpooled-no-exclusion}
#| code-summary: Show codes
#| output: false

mGym <- brm(response ~ frame * Country,
            data = data_Gym %>% 
              group_by(Country) %>% 
              mutate(response=as.vector(scale(response))) %>% 
              ungroup(),
             iter = 5000, refresh = 0)
```

```{r plot-Gym-unpooled-posteriors-no-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGym)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta" #
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "frame" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Gym", family="binomial", x=2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postGym <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Gym-unpooled-no-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% #
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Plane

```{r fit-Plane-unpooled-no-exclusion}
#| code-summary: Show codes
#| output: false

mPlane <- brm(response ~ coupon * Country,
             data = data_Plane,
             iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-Plane-unpooled-posteriors-no-exclusion}
#| fig-width: 4
#| fig-height: 10 
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlane)$dpars$mu$fe$b %>% 
  as.data.frame()

names(post)[1] <- "Austria"
names(post)[2] <- "theta"
names(post) <- str_remove( names(post), "b_" )
names(post) <- str_remove( names(post), "coupon" )
names(post) <- str_remove( names(post), "Country" )
all_countries <- names(post)[-2]
all_countries <- all_countries[-grep(":", all_countries)]

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"theta"]
  } else {
    theta <- post[,"theta"] + post[,grep(paste0(":",country), names(post))]
  }
  data.frame(theta, Country=country, study="Plane", family="binomial", x=6) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "yes"))
})

postPlane <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  scale_color_manual(values = c("#33628DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Plane-unpooled-no-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

:::

```{r plot-unpooled-posteriors-no-exclusion}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors"
#| warning: false
       
post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% 
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

plotOR <- post %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,5.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5, 3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plotSMD <- post %>% filter(family=="gaussian") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1,1.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "gray"), breaks = c("yes", "no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


cowplot::plot_grid(plotOR, plotSMD, nrow = 1, rel_widths = c(0.7, .3))

```


::: 







## Exploratory Analysis

In this section we perform a Bayesian unpooled analysis to explore the role of financial literacy (i.e., are people with higher levels of financial literacy less susceptible to the mental accounting effect?), age, gender, and income.

::: {.panel-tabset}

```{r fit-exploratory-MrAB1}
#| code-summary: Fit MrAB1
#| output: false
#| eval: true

mMrAB1 <- brm(response ~ condition*(Age+Education+FinancialLiteracy+Gender+numeric_income) + (condition*(Age+Education+FinancialLiteracy+Gender+numeric_income) | Country),
                data = MrAB %>% 
                  # Tidy
                  mutate(Age=as.numeric(Age)) %>%
                  filter(Age>0 & Age<99) %>% 
                  mutate(Education=as.numeric(Education)) %>% 
                  filter(Education<100) %>% 
                  filter(Gender%in%c("Male", "Female")) %>% 
                  mutate(condition_group=ifelse(
                    condition %in% c("gain-gain VS gain", "gain-loss VS gain"),
                    "gain",
                    "loss"
                  )) %>% 
                  filter(condition_group=="gain") %>% 
                  mutate(condition=factor(condition, levels = c("gain-loss VS gain", "gain-gain VS gain") )), 
                iter = 10000, refresh = 0, family="bernoulli")

```

```{r fit-exploratory-MrAB2}
#| code-summary: Fit MrAB2
#| output: false
#| eval: true

mMrAB2 <- brm(response ~ condition*(Age+Education+FinancialLiteracy+Gender+numeric_income) + (condition+FinancialLiteracy+Age+Education+FinancialLiteracy+Gender+numeric_income | Country),
                data = MrAB %>% 
                  # Tidy
                  mutate(Age=as.numeric(Age)) %>%
                  filter(Age>0 & Age<99) %>% 
                  mutate(Education=as.numeric(Education)) %>% 
                  filter(Education<100) %>% 
                  filter(Gender%in%c("Male", "Female")) %>% 
                  mutate(condition_group=ifelse(
                    condition %in% c("gain-gain VS gain", "gain-loss VS gain"),
                    "gain",
                    "loss"
                  )) %>% 
                  filter(condition_group=="loss") %>% 
                  mutate(condition=factor(condition, levels = c("loss-gain VS loss", "loss-loss VS loss") )), 
                iter = 10000, refresh = 0, family="bernoulli")

```

```{r fit-exploratory-Game}
#| code-summary: Fit Game
#| output: false
#| eval: true

mGame <- glmer(response ~ condition*(Age+Education+FinancialLiteracy+Gender+numeric_income) + (condition+FinancialLiteracy+Age+Education+FinancialLiteracy+Gender+numeric_income | Country),
                data = Game %>% 
                  # Tidy
                  mutate(Age=as.numeric(Age)) %>%
                  filter(Age>0 & Age<99) %>% 
                  mutate(Education=as.numeric(Education)) %>% 
                  filter(Education<100) %>% 
                  filter(Gender%in%c("Male", "Female")), 
                family=binomial())

```

```{r fit-exploratory-Drink}
#| code-summary: Fit Drink
#| output: false
#| eval: true

mDrink <- glmer(response ~ condition*(Age+Education+FinancialLiteracy+Gender+numeric_income) + (condition+FinancialLiteracy+Age+Education+FinancialLiteracy+Gender+numeric_income | Country),
                data = Drink %>% 
                  # Tidy
                  mutate(Age=as.numeric(Age)) %>%
                  filter(Age>0 & Age<99) %>% 
                  mutate(Education=as.numeric(Education)) %>% 
                  filter(Education<100) %>% 
                  filter(Gender%in%c("Male", "Female")))

```

```{r fit-exploratory-Jacket}
#| code-summary: Fit Jacket
#| output: false
#| eval: true

mJacket <- glmer(response ~ condition*(Age+Education+FinancialLiteracy+Gender+numeric_income) + (condition+FinancialLiteracy+Age+Education+FinancialLiteracy+Gender+numeric_income | Country),
                data = Jacket %>% 
                  # Tidy
                  mutate(Age=as.numeric(Age)) %>%
                  filter(Age>0 & Age<99) %>% 
                  mutate(Education=as.numeric(Education)) %>% 
                  filter(Education<100) %>% 
                  filter(Gender%in%c("Male", "Female")), 
                family=binomial())

```

```{r fit-exploratory-Play}
#| code-summary: Fit Play
#| output: false
#| eval: true

mPlay <- glmer(response ~ condition*(Age+Education+FinancialLiteracy+Gender+numeric_income) + (condition+FinancialLiteracy+Age+Education+FinancialLiteracy+Gender+numeric_income | Country),
                data = Play %>% 
                  # Tidy
                  mutate(Age=as.numeric(Age)) %>%
                  filter(Age>0 & Age<99) %>% 
                  mutate(Education=as.numeric(Education)) %>% 
                  filter(Education<100) %>% 
                  filter(Gender%in%c("Male", "Female")) %>% 
                 mutate(condition=factor(condition, levels = c("ticket", "cash"))), 
                family=binomial())

```

```{r fit-exploratory-Gym}
#| code-summary: Fit Gym
#| output: false
#| eval: true

mGym <- glmer(response ~ condition*(Age+Education+FinancialLiteracy+Gender+numeric_income) + (condition+FinancialLiteracy+Age+Education+FinancialLiteracy+Gender+numeric_income | Country),
                data = Gym %>% 
                  # Tidy
                  mutate(Age=as.numeric(Age)) %>%
                  filter(Age>0 & Age<99) %>% 
                  mutate(Education=as.numeric(Education)) %>% 
                  filter(Education<100) %>% 
                  filter(Gender%in%c("Male", "Female")))

```

```{r fit-exploratory-Plane}
#| code-summary: Fit Plane
#| output: false
#| eval: true

mPlane <- glmer(response ~ condition*(Age+Education+FinancialLiteracy+Gender+numeric_income) + (condition+FinancialLiteracy+Age+Education+FinancialLiteracy+Gender+numeric_income | Country),
                data = Plane %>% 
                  # Tidy
                  mutate(Age=as.numeric(Age)) %>%
                  filter(Age>0 & Age<99) %>% 
                  mutate(Education=as.numeric(Education)) %>% 
                  filter(Education<100) %>% 
                  filter(Gender%in%c("Male", "Female")), 
                family=binomial())

```


###  Age

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

```{r age-plot }
#| code-summary: "Show plot code"

Jacket %>% 
  filter(condition==first(Jacket$condition)) %>% 
  mutate(Age=as.numeric(Age)) %>%
  filter(Age>18 & Age<99) %>% 
  ggplot(aes(Age, Country, color=Country)) +
  geom_boxplot(width = 0.5) +
  geom_jitter(alpha=0.1, width = 0.3, height = 0.2) +
  theme_pubr() + 
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.y = element_text(size = 15),
        legend.position = "none") +
  scale_color_manual(values = color_21countries) +
  labs(y=NULL)

```

#### MrAB

```{r fit-MrAB1-unpooled-exploratory-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
#| eval: true

mMrAB1 <- brm(response ~ condition * (Age+Education+FinancialLiteracy+Gender+numeric_income) * Country,
              data = MrAB %>% 
                # Tidy
                mutate(Age=as.numeric(Age)) %>%
                filter(Age>0 & Age<99) %>% 
                mutate(Education=as.numeric(Education)) %>% 
                filter(Education<100) %>% 
                mutate(condition_group=ifelse(
                  condition %in% c("gain-gain VS gain", "gain-loss VS gain"),
                  "gain",
                  "loss"
                )) %>% 
                filter(condition_group=="gain") %>% 
                mutate(condition=factor(condition, levels = c("gain-loss VS gain", "gain-gain VS gain") )),
              iter = 5000, refresh = 0, family="bernoulli")
```

```{r fit-MrAB2-unpooled-exploratory-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
#| eval: false

mMrAB2 <- brm(response ~ condition * (Age+Education+FinancialLiteracy+Gender+numeric_income) * Country,
              data = MrAB %>% 
                # Tidy
                mutate(Age=as.numeric(Age)) %>%
                filter(Age>0 & Age<99) %>% 
                mutate(Education=as.numeric(Education)) %>% 
                filter(Education<100) %>% 
                mutate(condition_group=ifelse(
                  condition %in% c("gain-gain VS gain", "gain-loss VS gain"),
                  "gain",
                  "loss"
                )) %>% 
                filter(condition_group=="loss") %>% 
                mutate(condition=factor(condition, levels = c("loss-gain VS loss", "loss-loss VS loss") )),
              iter = 10000, refresh = 0, family="bernoulli")
```

```{r plot-MrAB-unpooled-age-posteriors-preregistered-exclusion}
#| fig-width: 6
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
#| eval: true

predictor_of_interest <- "Age"
post <- prepare_predictions(mMrAB1)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains("condition") & contains(":") & contains(predictor_of_interest))

names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))
all_countries <- names(post)
post_plot1 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postMrAB1 <- post_plot1 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB1 <- post_plot1 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#560f56", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")

cowplot::plot_grid(plMrAB1, plMrAB1, nrow = 1)

```

```{r summary-fit-MrAB1-unpooled-age-preregistered-exclusion}
#| echo: false
#| eval: true
rmarkdown::paged_table(
  post_plot1 %>% #r
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Game

```{r fit-Game-unpooled-exploratory-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
#| eval: false
mGame <- brm(response ~ buyer*FinancialLiteracy * Country,
              data = data_Game %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ),
              iter = 5000, refresh = 0, family="bernoulli")

```

#### Drink

```{r fit-Drink-unpooled-exploratory-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
#| eval: false
mDrink<- brm(response ~ store*FinancialLiteracy * Country,
              data = data_Drink %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
               # Remove really really extreme outliers
                filter(response<10000 & response>=0) %>% 
                mutate(response=response+1, logResp=log(response)) %>% 
                group_by(Country) %>%
                mutate(response=as.vector(scale(logResp))) %>% 
                ungroup(),
              iter = 5000, refresh = 0)

```

#### Jacket

```{r fit-Jacket-unpooled-exploratory-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
#| eval: false

mJacket <- brm(response ~ price*FinancialLiteracy * Country,
              data = data_Jacket %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ),
              iter = 5000, refresh = 0, family="bernoulli")

```

#### Play

```{r fit-Play-unpooled-exploratory-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
#| eval: false

mPlay <- brm(response ~ loss*FinancialLiteracy * Country,
              data = data_Play %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
               mutate(loss=factor(loss, levels = c("ticket", "cash"))),
              iter = 5000, refresh = 0, family="bernoulli")

```

#### Gym

```{r fit-Gym-unpooled-exploratory-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
#| eval: false

mGym <- brm(response ~ frame*FinancialLiteracy * Country,
              data = data_Gym %>% 
               # EXCLUSION: Full Exclusion
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_3 ) %>% 
               group_by(Country) %>%
               mutate(response=as.vector(scale(response))) %>% 
               ungroup(),
              iter = 5000, refresh = 0)

```

#### Plane

```{r fit-Plane-unpooled-exploratory-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
#| eval: false

mPlane <- brm(response ~ coupon*FinancialLiteracy * Country,
              data = data_Plane %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ),
              iter = 5000, refresh = 0, family="bernoulli")

```

:::

###  Education

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

```{r education-plot }
#| code-summary: "Show plot code"

Jacket %>% 
  # Tidy
  filter(condition==first(Jacket$condition)) %>% 
  mutate(Age=as.numeric(Age)) %>%
  filter(Age>0 & Age<99) %>% 
  mutate(Education=as.numeric(Education)) %>% 
  filter(Education<100) %>% 
  # Plot
  ggplot(aes(Education, Country, color=Country)) +
  geom_boxplot(width = 0.5) +
  geom_jitter(alpha=0.1, width = 0.3, height = 0.2) +
  scale_color_manual(values = color_21countries) +
  theme_pubr() +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.y = element_text(size = 15),
        legend.position = "none") +
  labs(y=NULL) 

```

#### MrAB

```{r plot-MrAB-unpooled-education-posteriors-preregistered-exclusion}
#| fig-width: 6
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
#| eval: true

predictor_of_interest <- "Education"
post <- prepare_predictions(mMrAB1)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains("condition") & contains(":") & contains(predictor_of_interest))

names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))
all_countries <- names(post)
post_plot1 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postMrAB1 <- post_plot1 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB1 <- post_plot1 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#560f56", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")

cowplot::plot_grid(plMrAB1, plMrAB1, nrow = 1)

```

```{r summary-fit-MrAB1-unpooled-education-preregistered-exclusion}
#| echo: false
#| eval: true
rmarkdown::paged_table(
  post_plot1 %>% #r
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Game

#### Drink

#### Jacket

#### Play

#### Gym

#### Plane

:::

###  Gender

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

```{r gender-plot }
#| code-summary: "Show plot code"
Jacket %>% 
  # Tidy
  filter(condition==first(Jacket$condition)) %>% 
  mutate(Age=as.numeric(Age)) %>%
  filter(Age>0 & Age<99) %>% 
  mutate(Education=as.numeric(Education)) %>% 
  filter(Education<100) %>% 
  filter(Gender!="Prefer not to say") %>% 
  group_by(Country) %>% 
  summarise(pMale = mean(ifelse(Gender=='Male', 1, 0))) %>% 
  # Plot
  ggplot(aes(pMale, Country, fill=Country)) +
  geom_bar(stat = "identity", width=0.8) +
  geom_boxplot(width = 0.5) +
  scale_fill_manual(values = color_21countries) +
  theme_pubr() +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.y = element_text(size = 15),
        legend.position = "none") +
  labs(x="Proportion of Male", y=NULL)
```

#### MrAB


```{r plot-MrAB-unpooled-gender-posteriors-preregistered-exclusion}
#| fig-width: 6
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
#| eval: true

predictor_of_interest <- "GenderMale"
post <- prepare_predictions(mMrAB1)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains("condition") & contains(":") & contains(predictor_of_interest))

names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))
all_countries <- names(post)
post_plot1 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postMrAB1 <- post_plot1 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB1 <- post_plot1 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#560f56", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")

cowplot::plot_grid(plMrAB1, plMrAB1, nrow = 1)

```

```{r summary-fit-MrAB1-unpooled-gender-preregistered-exclusion}
#| echo: false
#| eval: true
rmarkdown::paged_table(
  post_plot1 %>% #r
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Game

#### Drink

#### Jacket

#### Play

#### Gym

#### Plane

:::


###  Income

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

```{r income-plot }
#| code-summary: "Show plot code"

Jacket %>% 
  # Tidy
  filter(condition==first(Jacket$condition)) %>% 
  mutate(Age=as.numeric(Age)) %>%
  filter(Age>0 & Age<99) %>% 
  mutate(Education=as.numeric(Education)) %>% 
  filter(Education<100) %>% 
  # Plot
  ggplot(aes(numeric_income, Country, color=Country)) +
  geom_jitter(alpha=0.1, width = 0.2, height = 0.2) +
  scale_color_manual(values = color_21countries) +
  theme_pubr() +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.y = element_text(size = 15),
        legend.position = "none") +
  labs(y=NULL, x="Income") +
  scale_x_continuous(breaks = 0:5)

```

#### MrAB

```{r plot-MrAB-unpooled-income-posteriors-preregistered-exclusion}
#| fig-width: 6
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
#| eval: true

predictor_of_interest <- "numeric_income"
post <- prepare_predictions(mMrAB1)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains("condition") & contains(":") & contains(predictor_of_interest))

names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))
all_countries <- names(post)
post_plot1 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postMrAB1 <- post_plot1 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB1 <- post_plot1 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#560f56", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")

cowplot::plot_grid(plMrAB1, plMrAB1, nrow = 1)

```

```{r summary-fit-MrAB1-unpooled-income-preregistered-exclusion}
#| echo: false
#| eval: true
rmarkdown::paged_table(
  post_plot1 %>% #r
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


#### Game

#### Drink

#### Jacket

#### Play

#### Gym

#### Plane

:::

###  Financial Literacy

::: {.panel-tabset}

#### <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/3/34/Home-icon.svg/120px-Home-icon.svg.png" width="20">

Click on the tabs to see the model's summary for each study

```{r financial-literacy-plotly }
#| code-summary: "Show plot code"

plotlyDat <- data_MrAB %>% 
  group_by(Country, subject) %>% 
  filter(row_number()==1) %>% 
  group_by(Country) %>%
  mutate(N=n()) %>% 
  group_by(Country, FinancialLiteracy) %>% 
  summarise(fqFinLit = n()/N) %>% ungroup()

nCountries <- length(unique(plotlyDat$Country))

fig <- plot_ly(plotlyDat,  type = 'scatter', mode = 'lines',
               x = ~FinancialLiteracy, y = ~fqFinLit, color = ~Country, 
               colors = viridis::viridis_pal()(nCountries)) %>% 
  add_trace(line=list(width = 4)) %>% 
  layout(xaxis = list(title = "Financial Literacy Score", 
                      range=c(-0.5,4.5), zeroline = F, showgrid = FALSE),
         font = list(size=20),
         yaxis = list(title = "Proportion", showgrid = FALSE))

fig
```

#### MrAB

```{r fit-MrAB-unpooled-fin_lit-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
#| eval: true

mMrAB1 <- brm(response ~ scenario*FinancialLiteracy * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="gain") %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
                mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )), 
              iter = 5000, refresh = 0, family="bernoulli")


mMrAB2 <- brm(response ~ scenario*FinancialLiteracy * Country,
              data = data_MrAB %>% filter(response!=2) %>%
                filter(scenario_group=="loss") %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
                mutate(scenario=factor(scenario, levels = c("loss-gain VS loss", "loss-loss VS loss") )),
              iter = 5000, refresh = 0, family="bernoulli")
```

```{r plot-MrAB-unpooled-fin_lit-posteriors-preregistered-exclusion}
#| fig-width: 6
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
#| eval: true

post <- prepare_predictions(mMrAB1)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains(":") & contains("FinancialLiteracy"))

post <- post %>% select(!contains("b_FinancialLiteracy:Country"))
names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))

all_countries <- names(post)

post_plot1 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postMrAB1 <- post_plot1 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB1 <- post_plot1 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#560f56", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")


post <- prepare_predictions(mMrAB2)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains(":") & contains("FinancialLiteracy"))

post <- post %>% select(!contains("b_FinancialLiteracy:Country"))
names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))

all_countries <- names(post)

post_plot2 <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="MrAB", family="binomial", x=1.8) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postMrAB2 <- post_plot2 %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

plMrAB2 <- post_plot2 %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.line.y = element_blank(),
        axis.ticks.y = element_blank(),
        legend.position = "none")

cowplot::plot_grid(plMrAB1, plMrAB2, nrow = 1)

```

```{r summary-fit-MrAB1-unpooled-fin_lit-preregistered-exclusion}
#| echo: false
#| eval: true
rmarkdown::paged_table(
  post_plot1 %>% #r
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

```{r summary-fit-MrAB2-unpooled-fin_lit-preregistered-exclusion}
#| echo: false
#| eval: true
rmarkdown::paged_table(
  post_plot2 %>% #r
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Game

```{r fit-Game-unpooled-fin_lit-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
mGame <- brm(response ~ buyer*FinancialLiteracy * Country,
              data = data_Game %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ),
              iter = 5000, refresh = 0, family="bernoulli")

```

```{r plot-Game-unpooled-posteriors-fin_lit-preregistered-exclusion}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGame)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains(":") & contains("FinancialLiteracy"))

post <- post %>% select(!contains("b_FinancialLiteracy:Country"))
names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))

all_countries <- names(post)

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="Game", family="binomial", x=3) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postGame <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Game-unpooled-fin_lit-preregistered-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Drink

```{r fit-Drink-unpooled-fin_lit-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
mDrink<- brm(response ~ store*FinancialLiteracy * Country,
              data = data_Drink %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
               # Remove really really extreme outliers
                filter(response<10000 & response>=0) %>% 
                mutate(response=response+1, logResp=log(response)) %>% 
                group_by(Country) %>%
                mutate(response=as.vector(scale(logResp))) %>% 
                ungroup(),
              iter = 5000, refresh = 0)

```

```{r plot-Drink-unpooled-posteriors-fin_lit-preregistered-exclusion}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mDrink)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains(":") & contains("FinancialLiteracy"))

post <- post %>% select(!contains("b_FinancialLiteracy:Country"))
names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))

all_countries <- names(post)

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="Drink", family="gaussian", x=1) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postDrink <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SDM), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Drink-unpooled-fin_lit-preregistered-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Jacket

```{r fit-Jacket-unpooled-fin_lit-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
mJacket <- brm(response ~ price*FinancialLiteracy * Country,
              data = data_Jacket %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ),
              iter = 5000, refresh = 0, family="bernoulli")

```

```{r plot-Jacket-unpooled-posteriors-fin_lit-preregistered-exclusion}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mJacket)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains(":") & contains("FinancialLiteracy"))

post <- post %>% select(!contains("b_FinancialLiteracy:Country"))
names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))

all_countries <- names(post)

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="Jacket", family="binomial", x=4) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postJacket <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Jacket-unpooled-fin_lit-preregistered-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Play

```{r fit-Play-unpooled-fin_lit-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
mPlay <- brm(response ~ loss*FinancialLiteracy * Country,
              data = data_Play %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ) %>% 
               mutate(loss=factor(loss, levels = c("ticket", "cash"))),
              iter = 5000, refresh = 0, family="bernoulli")

```

```{r plot-Play-unpooled-posteriors-fin_lit-preregistered-exclusion}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlay)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains(":") & contains("FinancialLiteracy"))

post <- post %>% select(!contains("b_FinancialLiteracy:Country"))
names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))

all_countries <- names(post)

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="Play", family="binomial", x=5) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postPlay <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Play-unpooled-fin_lit-preregistered-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Gym

```{r fit-Gym-unpooled-fin_lit-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
mGym <- brm(response ~ frame*FinancialLiteracy * Country,
              data = data_Gym %>% 
               # EXCLUSION: Full Exclusion
               filter( !(Country %in% countries2remove) ) %>% 
               filter( attention_check_grater_than_3 ) %>% 
               group_by(Country) %>%
               mutate(response=as.vector(scale(response))) %>% 
               ungroup(),
              iter = 5000, refresh = 0)

```

```{r plot-Gym-unpooled-posteriors-fin_lit-preregistered-exclusion}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mGym)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains(":") & contains("FinancialLiteracy"))

post <- post %>% select(!contains("b_FinancialLiteracy:Country"))
names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))

all_countries <- names(post)

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="Gym", family="gaussian", x=2) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postGym <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(SMD), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-mGym-unpooled-fin_lit-preregistered-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```

#### Plane

```{r fit-Plane-unpooled-fin_lit-preregistered-exclusion}
#| code-summary: Show codes
#| output: false
mPlane <- brm(response ~ coupon*FinancialLiteracy * Country,
              data = data_Plane %>% 
                # EXCLUSION: Full Exclusion
                filter( !(Country %in% countries2remove) ) %>% 
                filter( attention_check_grater_than_3 ),
              iter = 5000, refresh = 0, family="bernoulli")

```

```{r plot-Plane-unpooled-posteriors-fin_lit-preregistered-exclusion}
#| fig-width: 4
#| fig-height: 10
#| code-summary: "Plot posteriors"
#| warning: false
 
post <- prepare_predictions(mPlane)$dpars$mu$fe$b %>% 
  as.data.frame() %>% 
  select(contains(":") & contains("FinancialLiteracy"))

post <- post %>% select(!contains("b_FinancialLiteracy:Country"))
names(post) <- c("Austria", sapply(2:length(post), function(i) strsplit( names(post)[i], "Country")[[1]][2]))

all_countries <- names(post)

post_plot <- map_dfr(all_countries, function(country){
  if(country=="Austria"){
    theta <- post[,"Austria"]
  } else {
    theta <- post[,"Austria"] + post[,country]
  }
  data.frame(theta, Country=country, study="Plane", family="binomial", x=6) %>% 
    mutate(lower = HDInterval::hdi( theta )["lower"],
           upper = HDInterval::hdi( theta )["upper"],
           credible = ifelse(lower<0, "no", "higher"),
           credible = ifelse(upper>0, credible, "lower"))
})

postPlane <- post_plot %>% 
  group_by(Country) %>% 
  mutate(theta=mean(theta)) %>% 
  filter(row_number()==1)

post_plot %>% 
  ggplot(aes(x = theta, y = Country)) +
  stat_halfeye(aes(fill=credible, color=credible)) +
  geom_vline(xintercept = 0, linetype=2) +
  theme_pubr() + 
  labs(x=expression(log(OR)), y=NULL) +
  scale_y_discrete(guide = "prism_offset") + 
  scale_x_continuous(guide = "prism_offset") + 
  scale_fill_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  scale_color_manual(values = c("#33628DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 15),
        legend.position = "none")
```

```{r summary-fit-Plane-unpooled-fin_lit-preregistered-exclusion}
#| echo: false
rmarkdown::paged_table( 
  post_plot %>% 
    group_by(Country) %>% mutate(mu=mean(theta)) %>% 
    filter(row_number()==1) %>% 
    select(Country, mu, lower, upper) %>% 
    ungroup()
  )
```


:::

```{r plot-unpooled-posteriors-fin_lit-preregistered-exclusion}
#| fig-width: 8
#| fig-height: 3.5
#| code-summary: "Plot posteriors"
#| warning: false
#| eval: true
       
post <- rbind(postMrAB1,postMrAB2,postGame,postDrink,postJacket,postPlay,postGym,postPlane) %>% 
  mutate(family=ifelse(study%in%c("Drink","Gym"), "gaussian", "binomial"))

plotOR <- post %>% filter(family=="binomial") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~log(OR))) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1.5,1.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks =c(1.5, 3:6), 
                     labels = post %>% filter(family=="binomial") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")

plotSMD <- post %>% filter(family=="gaussian") %>% 
  ggplot(aes(x, theta, color=credible)) +
  geom_jitter( width = 0.1, alpha=0.7, size=4 ) +
  geom_hline(yintercept = 0, linetype=2, size=1) +
  theme_pubr() + theme(legend.position = "right") +
  labs(x=NULL, y=expression(Posterior~SMD)) +
  scale_y_continuous(guide = "prism_offset", limits = c(-1.5,1.5), breaks = -1:5) +
  scale_size(range = c(3, 8)) +
  scale_x_continuous(breaks = 1:2, limits = c(0.5, 2.5),
                     labels = post %>% filter(family=="gaussian") %>% 
                       .[,"study",drop=T] %>% unique(),
                     guide = "prism_offset") + 
  scale_color_manual(values = c("#228B8DFF", "#D5006A", "gray"), breaks = c("higher", "lower","no")) +
  guides(size = "none") + 
  theme(text = element_text(size = 15), legend.position = "none")


cowplot::plot_grid(plotOR, plotSMD, nrow = 1, rel_widths = c(0.7, .3))

```


:::

```{bash, engine.opts='-l'}
#| warning: false
#| message: false
#| echo: false
#| output: false

# update-pavlovia-0

pathdir="/Volumes/PROJECTS/Ongoing/MMAR/Pavlovia/mmar-analysis"

cp -r index_files $pathdir
cp index.html $pathdir

cd $pathdir
git pull
git add -A
git commit -m "update report"
git push

```





