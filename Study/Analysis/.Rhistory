}
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
plogis(
( meanBeta(A)*(varBeta(A)*12)-meanBeta(B)*(varBeta(B)*12) )
)
( meanBeta(A)-meanBeta(B)*( 1/ sum( varBeta(B)+varBeta(A) ) )
plogis(
sqrt(varBeta(A))
sqrt(varBeta(B))
( sqrt(varBeta(B))+sqrt(varBeta(A)) )
1/ ( sqrt(varBeta(B))+sqrt(varBeta(A)) )
( meanBeta(A)-meanBeta(B)*( 1/ ( sqrt(varBeta(B))+sqrt(varBeta(A)) ) )
plogis(
( meanBeta(A)-meanBeta(B) )*( 1/ ( sqrt(varBeta(B))+sqrt(varBeta(A)) ) )
)
x = seq(0,1,0.01)
if( sum(A)>sum(B)){
plot(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
lines(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
} else {
plot(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
lines(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
}
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
dbeta(seq(0,1,0.1), A[1]+1, A[2]+1)
seq(0,1,0.1)
dbeta(seq(0,1,0.1), A[1]+1, A[2]+1)
plot(dbeta(seq(0,1,0.1), A[1]+1, A[2]+1))
plot(dbeta(seq(0,1,0.1), B[1]+1, B[2]+1))
lines(dbeta(seq(0,1,0.1), B[1]+1, B[2]+1))
plot(dbeta(seq(0,1,0.1), A[1]+1, A[2]+1))
lines(dbeta(seq(0,1,0.1), B[1]+1, B[2]+1))
plot(dbeta(seq(0,1,0.1), A[1]+1, A[2]+1), type='l')
lines(dbeta(seq(0,1,0.1), B[1]+1, B[2]+1))
dA = dbeta(seq(0,1,0.1), A[1]+1, A[2]+1)
plot(dA, type='l')
dB = dbeta(seq(0,1,0.1), B[1]+1, B[2]+1)
lines(dB)
dA-dB
dA*0.1-dB*0.1
dB*0.1-dA*0.1
(dB*0.1-dA*0.1)[dB*0.1-dA*0.1]>0
AB
dA*0.1-dB*0.1
AB = dA*0.1-dB*0.1
AB
dA*0.1
dA*0.1-dB*0.1
abs(dA*0.1-dB*0.1)
sum( abs(dA*0.1-dB*0.1) )
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
dA = dbeta(seq(0,1,0.01), A[1]+1, A[2]+1)
plot(dA, type='l')
dB = dbeta(seq(0,1,0.01), B[1]+1, B[2]+1)
lines(dB)
sum( abs(dA*0.1-dB*0.1) )
AB = dA*0.1-dB*0.1
BA = dB*0.1-dA*0.1
sum( abs(dA*0.1-dB*0.1) )
sum( abs(dA*0.01-dB*0.01) )
AB = dA*0.1-dB*0.1
dA*0.01
dA-(dA+dB)
A = c(3, 5)
B = c(5, 3)
plogis(
( meanBeta(A)-meanBeta(B) ) * ( 1/sqrt(varBeta(A)) + 1/sqrt(varBeta(B)) )
)
plogis(
( meanBeta(A)-meanBeta(B) )
)
plogis(
( meanBeta(A)-meanBeta(B) )*( 1 / ( sqrt(varBeta(B))+sqrt(varBeta(A)) ) )
)
x = seq(0,1,0.01)
if( sum(A)>sum(B)){
plot(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
lines(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
} else {
plot(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
lines(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
}
dA = dbeta(seq(0,1,0.01), A[1]+1, A[2]+1)
plot(dA, type='l')
dB = dbeta(seq(0,1,0.01), B[1]+1, B[2]+1)
lines(dB)
dA-dB
dA-(dA-dB)
sum(dA-(dA+dB))
dA-(dA+dB)
dA
dA-(dA+dB)
sum(dA-(dA-dB))
dA-dB
(dA-dB)
dAB = dA-dB
sum(dA-(dAB))
dAB
d_pos = dAB<=0
dA[d_pos]
sum(dA[d_pos]-(dAB[d_pos]))
dA[d_pos]
dA[d_pos]
A = c(3, 5)
B = c(5, 3)
plogis(
( meanBeta(A)-meanBeta(B) ) * ( 1/sqrt(varBeta(A)) + 1/sqrt(varBeta(B)) )
)
plogis(
( meanBeta(A)-meanBeta(B) )
)
plogis(
( meanBeta(A)-meanBeta(B) )*( 1 / ( sqrt(varBeta(B))+sqrt(varBeta(A)) ) )
)
x = seq(0,1,0.01)
if( sum(A)>sum(B)){
plot(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
lines(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
} else {
plot(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
lines(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
}
dA = dbeta(seq(0,1,0.01), A[1]+1, A[2]+1)
plot(dA, type='l')
dB = dbeta(seq(0,1,0.01), B[1]+1, B[2]+1)
lines(dB)
if( sum(A)>sum(B)){
plot(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
lines(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
} else {
plot(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
lines(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
}
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
eD = meanBeta(A)
eD = meanBeta(A)-meanBeta(B)
eD = meanBeta(A)-meanBeta(B)
vD = varBeta(A)-varBeta(B)
qnorm((eD+1)/sqrt(vD))
qnorm
(eD+1)/sqrt(vD)
sqrt(vD)
eD = meanBeta(A)-meanBeta(B)
vD = varBeta(A)-varBeta(B)
eD = meanBeta(A)-meanBeta(B)
vD = varBeta(A)+varBeta(B)
qnorm((eD+1)/sqrt(vD))
sqrt(vD)
eD
(eD+1)
(eD+1)/sqrt(vD)
qnorm((eD+1)/sqrt(vD))
qnorm(3)
pnorm(3)
pnorm(2)
pnorm(0)
pnorm((eD+1)/sqrt(vD))
1 - pnorm((eD+1)/sqrt(vD))
1 - pnorm( (eD+1+1) /sqrt(vD) )
eD+1
eD+1+1
(eD+1+1)
(eD+1+1) /sqrt(vD)
seq(-3, 3, 0.1)
dnorm(seq(-3, 3, 0.1), eD, vD)
seq(-3, 3, length.out=length(x))
lines(dnorm(seq(-3, 3, length.out=length(x)), eD, vD), type='l', col='green')
if( sum(A)>sum(B)){
plot(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
lines(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
} else {
plot(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
lines(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
}
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
eD = meanBeta(A)-meanBeta(B)
vD = varBeta(A)+varBeta(B)
lines(dnorm(seq(0, 1, length.out=length(x)), eD, vD), type='l', col='green')
eD
if( sum(A)>sum(B)){
plot(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
lines(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
} else {
plot(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
lines(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
}
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
eD = meanBeta(A)-meanBeta(B)
vD = varBeta(A)+varBeta(B)
lines(dnorm(seq(-1, 1, length.out=length(x)), eD, vD), type='l', col='green')
lines(dnorm(seq(-0.5, 0.5, length.out=length(x)), eD, vD), type='l', col='green')
lines(dnorm(seq(-0.3, 0.1, length.out=length(x)), eD, vD), type='l', col='green')
lines(dnorm(seq(-0.4, 0.1, length.out=length(x)), eD, vD), type='l', col='green')
if( sum(A)>sum(B)){
plot(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
lines(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
} else {
plot(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
lines(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
}
plot(dnorm(seq(-0.4, 0.1, length.out=length(x)), eD, vD), type='l', col='green')
plot(seq(-0.4, 0.1, length.out=length(x)), dnorm(seq(-0.4, 0.1, length.out=length(x)), eD, vD), type='l', col='green')
pnorm( (eD+1+1) /sqrt(vD) )
pnorm( (eD) /sqrt(vD) )
pnorm( eD /sqrt(vD) )
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
pnorm( eD /sqrt(vD) )
pnorm( eD /sqrt(vD) )
plogis( eD / sqrt(vD) )
pnorm( eD / sqrt(vD) )
A = c(0, 0)
B = c(0, 0)
x = seq(0,1,0.01)
if( sum(A)>sum(B)){
plot(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
lines(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
} else {
plot(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
lines(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
}
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
eD = meanBeta(A)-meanBeta(B)
vD = varBeta(A)+varBeta(B)
plot(seq(-0.4, 0.1, length.out=length(x)), dnorm(seq(-0.4, 0.1, length.out=length(x)), eD, vD), type='l', col='green')
pnorm( eD / sqrt(vD) )
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
pnorm( eD / sqrt(vD) )
A = c(0, 0)
B = c(2, 1)
x = seq(0,1,0.01)
if( sum(A)>sum(B)){
plot(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
lines(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
} else {
plot(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
lines(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
}
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
eD = meanBeta(A)-meanBeta(B)
vD = varBeta(A)+varBeta(B)
pnorm( eD / sqrt(vD) )
A = c(0, 1)
B = c(1, 1)
x = seq(0,1,0.01)
if( sum(A)>sum(B)){
plot(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
lines(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
} else {
plot(dbeta(x, B[1]+1, B[2]+1), type='l', col='firebrick')
lines(dbeta(x, A[1]+1, A[2]+1), type='l', col='navy')
}
mean(rbeta(100000, A[1]+1, A[2]+1) > rbeta(100000, B[1]+1, B[2]+1))
eD = meanBeta(A)-meanBeta(B)
vD = varBeta(A)+varBeta(B)
pnorm( eD / sqrt(vD) )
# Load libraries
library(dplyr); library(purrr); library(stringr)
library(ggplot2); library(ggpubr); library(jcolors)
library(cowplot); library(ggprism); library(tidybayes)
library(reshape2); library(parallel); library(rstan)
library(brms)
library(plotly)
# Load data
data_MrAB <- read.csv(file = "../../Data/data_MrAB.csv")
# Load data
data_MrAB <- read.csv(file = "../Data/data_MrAB.csv")
data_Game <- read.csv(file = "../Data/data_Game.csv")
data_Drink <- read.csv(file = "../Data/data_Drink.csv")
data_Jacket <- read.csv(file = "../Data/data_Jacket.csv")
data_Play <- read.csv(file = "../Data/data_Play.csv")
data_Gym <- read.csv(file = "../Data/data_Gym.csv")
data_Plane <- read.csv(file = "../Data/data_Plane.csv")
View(data_Drink)
names(data_Drink)
data_MrAB %>% filter(response!=2) %>%
filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") ))
countries2remove <- data_MrAB %>%
filter(attention_check_grater_than_3) %>%
group_by(subject) %>%
filter(row_number()==1) %>%
group_by(Country) %>%
summarise(sample_size=n()) %>%
filter(sample_size<250) %>%
.[,"Country", drop=TRUE]
data_MrAB %>% filter(response!=2) %>%
filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") ))
data_MrAB %>% filter(response!=2) %>%
filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") ))
dMrAB <- data_MrAB %>% filter(response!=2) %>%
filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") ))
names(dMrAB)
View(data_Play)
View(dMrAB)
dMrAB <- data_MrAB %>% filter(response!=2) %>%
filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )) %>%
select(-c(X))
names(dMrAB)
dMrAB <- data_MrAB %>% filter(response!=2) %>%
filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )) %>%
select(-c(X, Residence))
names(dMrAB)
dMrAB <- data_MrAB %>% filter(response!=2) %>%
filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )) %>%
select(-c(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
scenario, response, scenario_group))
names(dMrAB)
dMrAB <- data_MrAB %>% filter(response!=2) %>%
filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )) %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
scenario, response, scenario_group)
names(dMrAB)
View(dMrAB)
dMrAB <- data_MrAB %>% filter(response!=2) %>%
# filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )) %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
scenario, response)
View(dMrAB)
data_Game %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 )
dGame <- data_Game %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 )
View(dGame)
table(dGame$buyer)
dMrAB <- data_MrAB %>% filter(response!=2) %>%
# filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )) %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
condition=scenario, response)
names(dGame)
dGame <- data_Game %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
condition=buyer, response)
dDrink <- data_Drink %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
# Remove really really extreme outliers
filter(response<10000 & response>=0) %>%
mutate(response=response+1, logResp=log(response)) %>%
group_by(Country) %>%
mutate(response=as.vector(scale(logResp))) %>%
ungroup()
names(dDrink)
dDrink <- data_Drink %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
# Remove really really extreme outliers
filter(response<10000 & response>=0) %>%
mutate(response=response+1, logResp=log(response)) %>%
group_by(Country) %>%
mutate(response=as.vector(scale(logResp))) %>%
ungroup() %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
condition=store, response)
names(dDrink)
dDrink$response
hist(dDrink$response)
dJacket <- data_Jacket %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 )
names(dJacket)
dJacket <- data_Jacket %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
condition=price, response)
dPlay <- data_Play %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(loss=factor(loss, levels = c("ticket", "cash")))
names(dPlay)
dPlay <- data_Play %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
mutate(loss=factor(loss, levels = c("ticket", "cash"))) %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
condition=loss, response)
names(dPlay)
dGym <- data_Gym %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
group_by(Country) %>%
mutate(response=as.vector(scale(response))) %>%
ungroup()
names(dGym)
dGym <- data_Gym %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
group_by(Country) %>%
mutate(response=as.vector(scale(response))) %>%
ungroup() %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
condition=frame, response)
names(dGym)
dPlane <- data_Plane %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 )
names(dPlane)
dPlane <- data_Plane %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
condition=coupon, response)
setwd("/Volumes/PROJECTS/Ongoing/MMAR/MMAR GitHub/Study/Data")
write.csv(dMrAB, file = "./Preregistered/dMrAB.csv", row.names = NULL)
write.csv(dMrAB, file = "./Preregistered/dMrAB.csv", row.names = FALSE)
write.csv(dMrAB, file = "./Preregistered/MrAB.csv", row.names = FALSE)
write.csv(dGame, file = "./Preregistered/Game.csv", row.names = FALSE)
write.csv(dDrink, file = "./Preregistered/Drink.csv", row.names = FALSE)
write.csv(dJacket, file = "./Preregistered/Jacket.csv", row.names = FALSE)
write.csv(dPlay, file = "./Preregistered/Play.csv", row.names = FALSE)
write.csv(dGym, file = "./Preregistered/Gym.csv", row.names = FALSE)
write.csv(dPlane, file = "./Preregistered/Plane.csv", row.names = FALSE)
dMrAB$condition
table(dMrAB$condition)
dMrAB <- data_MrAB %>% filter(response!=2) %>%
filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 )
table(dMrAB$condition)
table(dMrAB$scenario)
dMrAB <- data_MrAB %>% filter(response!=2) %>%
# filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
# mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )) %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
condition=scenario, response)
table(dMrAB$condition)
dMrAB <- data_MrAB %>% filter(response!=2) %>%
# filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
# mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )) %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
condition=scenario, response)
# ---------------------- Mr. A vs Mr. B ---------------------- #
dMrAB <- data_MrAB %>% filter(response!=2) %>%
# filter(scenario_group=="gain") %>%
# EXCLUSION: Full Exclusion
filter( !(Country %in% countries2remove) ) %>%
filter( attention_check_grater_than_3 ) %>%
# mutate(scenario=factor(scenario, levels = c("gain-loss VS gain", "gain-gain VS gain") )) %>%
select(subject, Gender, Age, Income, Education, Country, FinancialLiteracy,
condition=scenario, response)
write.csv(dMrAB, file = "./Preregistered/MrAB.csv", row.names = FALSE)
table(dGame$condition)
table(dDrink$condition)
table(dJacket$condition)
table(dPlay$condition)
table(dGym$condition)
table(dPlane$condition)
